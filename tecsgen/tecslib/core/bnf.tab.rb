#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "tecslib/core/bnf.y.rb".
#

require 'racc/parser'


class Generator < Racc::Parser

module_eval <<'..end tecslib/core/bnf.y.rb modeval..id12ef0f2c4d', 'tecslib/core/bnf.y.rb', 1419

  RESERVED = {
    # keyword
    'namespace' => :NAMESPACE,
    'signature' => :SIGNATURE,
    'celltype' => :CELLTYPE,
    'cell' => :CELL,
    'attr' => :ATTRIBUTE,
    'var' => :VAR,
    'call' => :CALL,
    'entry' => :ENTRY,
    'composite' => :COMPOSITE,
    'require' => :REQUIRE,
    'factory' => :FACTORY,
    'FACTORY' => :CTFACTORY,
    'typedef' => :TYPEDEF,
    'struct' => :STRUCT,
    'region' => :REGION,
    'import' => :IMPORT,
    'import_C' => :IMPORT_C,
    'generate' => :GENERATE,

    # types
    'void'    => :VOID,

    'volatile'=> :VOLATILE,
    'const'   => :CONST,

    'signed'  => :SIGNED,
    'unsigned'=> :UNSIGNED,

    'int8_t'    => :INT8_T,
    'int16_t'   => :INT16_T,
    'int32_t'   => :INT32_T,
    'int64_t'   => :INT64_T,
    'int128_t'  => :INT128_T,
    'uint8_t'   => :UINT8_T,
    'uint16_t'  => :UINT16_T,
    'uint32_t'  => :UINT32_T,
    'uint64_t'  => :UINT64_T,
    'uint128_t' => :UINT128_T,

    'float32_t'   => :FLOAT32_T,
    'double64_t'  => :DOUBLE64_T,
    'bool_t'      => :BOOL_T,
    'char_t'  => :CHAR_T,
    'schar_t'  => :SCHAR_T,
    'uchar_t'  => :UCHAR_T,

    # unrecommened types
    'int'     => :INT,
#   'intptr'  => :INTPTR,
    'short'   => :SHORT,
    'long'    => :LONG,

    # obsolete types
    'char'    => :CHAR,
    'int8'    => :INT8,
    'int16'   => :INT16,
    'int32'   => :INT32,
    'int64'   => :INT64,
    'int128'  => :INT128,
    'float'   => :FLOAT,
    'double'  => :DOUBLE,
#   'bool'    => :BOOL,

    'enum'    => :ENUM,
    'enum8'   => :ENUM8,
    'enum16'  => :ENUM16,
    'enum32'  => :ENUM32,
    'enum64'  => :ENUM64,

    'true'    => :TRUE,
    'false'   => :FALSE,

    'C_EXP'   => :C_EXP
  }

  # 指定子 '[]' 内でのみ使用できるキーワード
  RESERVED2 = {
    # specifier
    'id' => :ID,

    # signature
    'context' => :CONTEXT,
    'deviate' => :DEVIATE,

    # celltype
    'singleton' => :SINGLETON,
    'idx_is_id' => :IDX_IS_ID,
    'active' => :ACTIVE,

    # port (entry)
    'inline' => :INLINE,

    # port (call)
    'optional' => :OPTIONAL,

    # attribute
    'omit' => :OMIT,

    # cell
    'allocator' => :ALLOCATOR,

    # FuncType
    'oneway' => :ONEWAY,

    # parameter (basic)
    'in' => :IN,
    'out' => :OUT,
    'inout' => :INOUT,
    'send' => :SEND,
    'receive' => :RECEIVE,

    # parameter 
    'size_is' => :SIZE_IS,
    'count_is' => :COUNT_IS,
    'string' => :STRING,
    'nullable' => :NULLABLE,

    'through' => :THROUGH,
    'in_through' => :IN_THROUGH,
    'out_through' => :OUT_THROUGH,
    'to_through' => :TO_THROUGH,

    'node' => :NODE,
    'linkunit' => :LINKUNIT ,
    'domain' => :DOMAIN,
    'class' => :CLASS,
  }

  # 再帰的なパーサのためのスタック
  @@generator_nest = -1
  @@generator_stack = []
  @@current_locale = []

  # import_C 中である
  @@import_C = false

  # すべての構文解析が完了した
  @@b_end_all_parse = false

  # tag なし struct
  @@no_struct_tag_num = 0

  def self.parse( file_name, plugin = nil, b_reuse = false )
    # パーサインスタンスを生成(別パーサで読み込む)
    parser = Generator.new

    # plugin から import されている場合の plugin 設定
    parser.set_plugin plugin

    # reuse フラグを設定
    parser.set_reuse b_reuse

    # cdl をパース
    parser.parse( [file_name] )

    # 終期化　パーサスタックを戻す
    parser.finalize
  end

  def finalize

    # mikan Namespace.pop
    Namespace.pop
    Signature.pop
    Celltype.pop
    Cell.pop
    CompositeCelltype.pop
  end

  def set_plugin( plugin )
    @plugin = plugin
  end

  def self.get_plugin
    if @@generator_stack[@@generator_nest] then
      # tecsgen 引数の cdl が import される場合は nil
      return @@generator_stack[@@generator_nest].get_plugin
    else
      return nil
    end
  end

  def get_plugin
    @plugin
  end

  def set_reuse( b_reuse )
    @b_reuse = b_reuse
  end

  def self.is_reuse?
    if @@generator_stack[@@generator_nest] then
      # tecsgen 引数の cdl が import される場合は nil
      return @@generator_stack[@@generator_nest].is_reuse?
    else
      return false
    end
  end

  def is_reuse?
    @b_reuse
  end

  def parse(files)

    # mikan Namespace.push
    Namespace.push
    Signature.push
    Celltype.push
    Cell.push
    CompositeCelltype.push

    @@generator_nest += 1
    @@generator_stack[@@generator_nest] = self
    @in_specifier = false

    begin

      @q = []
      b_in_comment = false
      b_in_string = false

      # euc のコメントを utf8 として扱うと、コメントの終わりを誤る問題の対策
      TECS_LANG::set_kcode_binary

      files.each {|file|
        lineno = 1
        begin
          string = ""
#2.0          IO.foreach(file) {|line|
          TECSIO.foreach(file) {|line|
            col = 1
#            line.rstrip!         改行含む文字列を扱うようになったので、ここで空白を取り除けなくなった

            until line.empty?

              if b_in_comment
                case line
                  # コメント終了
                when /\A\*\//
                  b_in_comment = false
                when /\A./
                  ;
                when /\s+/     # line.rstrip! を止めたため \n などの空白文字とまっちするルールが必要になった
                  ;
                end
              elsif b_in_string
                if line =~ /\A(?:[^"\\]|\\.)*"/
                  string = "#{string}#{$&}"
                  @q <<  [:STRING_LITERAL, Token.new(string, file, lineno, col)]
                  b_in_string = false
                elsif line =~ /\A.*\\\n/     # 改行 \n は '.' にマッチしない
                  string += $&
                elsif line =~ /\A.*\n/     # 改行 \n は '.' にマッチしない
                  string += line
                  # この位置では error メソッドは使えない (token 読出し前)
                  puts "error: #{file} line #{lineno}: string literal has newline without escape"
                  @@n_error += 1
                end
              else
                case line
                # 空白、プリプロセスディレクティブ
                when /\A\s+/
                  ;
                # 識別子
                when /\A[a-zA-Z_]\w*/
                  word = $&
                  @q << [RESERVED[word] || :IDENTIFIER, Token.new(word.intern, file, lineno, col)]
                # 16 進数定数
                when /\A0x[0-9A-Fa-f]+/
                  @q << [:HEX_CONSTANT, Token.new($&, file, lineno, col)]
                # 8 進数定数
                when /\A0[0-7]+/
                  @q << [:OCTAL_CONSTANT, Token.new($&, file, lineno, col)]
                # 浮動小数定数
                when /\A[0-9]+\.([0-9]*)?([Ee][+-]?[0-9]+)?/
                  @q << [:FLOATING_CONSTANT, Token.new($&, file, lineno, col)]
                # 整数定数
                when /\A\d+/
                  @q << [:INTEGER_CONSTANT, Token.new($&.to_i, file, lineno, col)]
                # 文字定数
                when /\A'(?:[^'\\]|\\.)'/
                  @q << [:CHARACTER_LITERAL, Token.new($&, file, lineno, col)]
                # 文字列
#                "#include  #include #include \"../systask/logtask.cfg\"       最後の " 忘れ)で無限ループ
#                when /\A"(?:[^"\\]+|\\.)*"/
                when /\A"(?:[^"\\]|\\.)*"/   # これはうまく行くようだ
                  @q << [:STRING_LITERAL, Token.new($&, file, lineno, col)]
                # 文字列 (改行あり)
                when /\A"(?:[^"\\]|\\.)*\\\n$/
                  string = $&
                  b_in_string = true
                # 文字列 (改行あり, escape なし)
                when /\A("(?:[^"\\]|\e\.)*)\n$/
                  string = $1 + "\\\n"
                  b_in_string = true
                  # この位置では error メソッドは使えない (token 読出し前) # mikan cdl_error ではない
                  puts "error: #{file} line #{lineno}: string literal has newline without escape"
                  @@n_error += 1
                # 山括弧で囲まれた文字列
                when /\A<[0-9A-Za-z_\. \/]+>/   # AB: angle bracke
                  @q << [:AB_STRING_LITERAL, Token.new($&, file, lineno, col)]
                # 行コメント
                when /\A\/\/.*$/
                  # 読み飛ばすだけ
                # コメント開始
                when /\A\/\*/
                  b_in_comment = true
                # '>>', '<<' など
                when /\A>>/, /\A<</, /\A==/, /\A!=/, /\A\&\&/, /\A\|\|/
                  @q << [$&, Token.new($&, file, lineno, col)]
                when /\A::/, /\A=>/, /\A<=/, /\A>=/
                  @q << [$&, Token.new($&, file, lineno, col)]
                # '(', ')' など一文字の記号、または未知の記号
                when /\A./
                  @q << [$&, Token.new($&, file, lineno, col)]
                else
                  raise
                end
              end

              line = $'
              col += $&.length
            end

            lineno += 1
          }

        rescue => evar
          Generator.error( "G1014 while open or reading \'$1\'" , file )
          if $debug then
            p puts( evar )
            pp $@
          end
        end
      }

      # 終了の印
      @q << nil

      @yydebug = true
      do_parse

    ensure
      @@generator_nest -= 1
      TECS_LANG::reset_kcode
    end

  end

  def next_token
    token = @q.shift

    if token then
      @@current_locale[@@generator_nest] = token[1].locale

      if token[0] == :IDENTIFIER then
        # TYPE_NAME トークンへ置換え
        if Namespace.is_typename?( token[1].val ) then
          token[0] = :TYPE_NAME
        elsif @in_specifier && RESERVED2[ token[1].val.to_s ] then
          # 指定子キーワード（ '[', ']' 内でのみ有効)
          token[0] = RESERVED2[ token[1].val.to_s ]
        end
      end

      if $debug then     # 070107 token 無効時ここを通さないようした (through 対応 -d の時に例外発生) 
        locale = @@current_locale[@@generator_nest]
        if token then
          print( "#{locale[0]}: line #{locale[1]} : #{token[0]} '#{token[1].val}'\n" )
        else
          print( "#{locale[0]}: line #{locale[1]} : EOF\n" )
        end
      end
    else
      token = [ false, false ]
    end

    token
  end

  def on_error(t, v, vstack)
    # p t, token_to_str(t), vstack
    if token_to_str(t) == "$end" then
      Generator.error( "G1015 Unexpected EOF"  )
    else
      Generator.error( "G1016 syntax error near \'$1\'" , v.val )
    end
  end

  def self.current_locale
    @@current_locale[ @@generator_nest ]
  end

  @@n_error = 0
  @@n_warning = 0

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でエラー発生は不適切）
  def self.error( msg, *arg )
    locale = nil
    self.error2( locale, msg, *arg )
  end

  def self.error2( locale, msg, *arg )
    @@n_error += 1

    msg = TECSMsg.get_error_message( msg )
    # $1, $2, ... を arg で置換
    count = 1
    arg.each{ |a|
      str = TECSIO.str_code_convert( msg, a.to_s )
      msg.sub!( /\$#{count}/, str )
      count += 1
    }

    # import_C の中でのエラー？
    if @@import_C then
      C_parser.error( msg )
    else

      # Node の記憶する 位置 (locale) を使用した場合、変更以前に比べ、
      # 問題発生箇所と異なる位置にエラーが出るため、構文解析中のエラー
      # は、解析中の位置を出力する．(new_XXX で owner が子要素のチェッ
      # クをすると owner の行番号が出てしまう点で、ずれが生じている)

      if @@b_end_all_parse == false || locale == nil then
        locale = @@current_locale[ @@generator_nest ]
      end
      if locale then
        Console.puts "error: #{locale[0]}: line #{locale[1]} #{msg}"
      else
        Console.puts "error: #{msg}"
      end
    end
  end

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でウォーニング発生は不適切）
  def self.warning( msg, *arg )
    locale = nil
    self.warning2( locale, msg, *arg )
  end

  def self.warning2( locale, msg, *arg )
    @@n_warning += 1

    msg = TECSMsg.get_warning_message( msg )
    # $1, $2, ... を arg で置換
    count = 1
    arg.each{ |a|
      str = TECSIO.str_code_convert( msg, a.to_s )
      msg.sub!( /\$#{count}/, str )
      count += 1
    }

    # import_C の中でのウォーニング？
    if @@import_C then
      C_parser.warning( msg )
    else
      if @@b_end_all_parse == false || locale == nil then
        locale = @@current_locale[ @@generator_nest ]
      end
      if locale then
        Console.puts "warning: #{locale[0]}: line #{locale[1]} #{msg}"
      else
        Console.puts "warning: #{msg}"
      end
    end
  end

  def self.get_n_error
    @@n_error
  end

  def self.get_n_warning
    @@n_warning
  end

  def self.get_nest
    @@generator_nest
  end

  #===  '[' specifier 始め
  def set_in_specifier
    # p "set_in_specifier"
    @in_specifier = true
  end

  #=== ']' specifier 終わり
  def unset_in_specifier
    # p "unset_in_specifier"
    @in_specifier = false
  end

  # statement_specifier は構文解釈途中で参照したいため
  @@statement_specifier_stack = []
  def self.add_statement_specifier( ss )
    if( @@statement_specifier_stack[ @@generator_nest ] == nil )then
      @@statement_specifier_stack[ @@generator_nest ] = [ ss ]
    else
      @@statement_specifier_stack[ @@generator_nest ] << ss
    end
  end


  def self.get_statement_specifier
    spec_list = @@statement_specifier_stack[ @@generator_nest ]
    @@statement_specifier_stack[ @@generator_nest ] = nil
    return spec_list
  end

  #=== すべての構文解析が完了したことを報告
  def self.end_all_parse
    @@b_end_all_parse = true
  end

..end tecslib/core/bnf.y.rb modeval..id12ef0f2c4d

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 136, :_reduce_none,
 1, 138, :_reduce_2,
 1, 138, :_reduce_3,
 1, 138, :_reduce_4,
 1, 138, :_reduce_5,
 1, 138, :_reduce_6,
 1, 138, :_reduce_7,
 1, 138, :_reduce_8,
 1, 138, :_reduce_9,
 1, 138, :_reduce_10,
 3, 138, :_reduce_11,
 1, 140, :_reduce_none,
 2, 140, :_reduce_13,
 1, 142, :_reduce_none,
 4, 142, :_reduce_15,
 3, 142, :_reduce_16,
 3, 142, :_reduce_17,
 1, 143, :_reduce_none,
 2, 143, :_reduce_19,
 2, 143, :_reduce_20,
 4, 143, :_reduce_21,
 1, 144, :_reduce_22,
 1, 144, :_reduce_23,
 1, 144, :_reduce_24,
 1, 144, :_reduce_25,
 1, 144, :_reduce_26,
 1, 144, :_reduce_27,
 1, 145, :_reduce_none,
 4, 145, :_reduce_29,
 1, 147, :_reduce_none,
 3, 147, :_reduce_31,
 3, 147, :_reduce_32,
 3, 147, :_reduce_33,
 1, 148, :_reduce_none,
 3, 148, :_reduce_35,
 3, 148, :_reduce_36,
 1, 149, :_reduce_none,
 3, 149, :_reduce_38,
 3, 149, :_reduce_39,
 1, 150, :_reduce_none,
 3, 150, :_reduce_41,
 3, 150, :_reduce_42,
 3, 150, :_reduce_43,
 3, 150, :_reduce_44,
 1, 151, :_reduce_none,
 3, 151, :_reduce_46,
 3, 151, :_reduce_47,
 1, 152, :_reduce_none,
 3, 152, :_reduce_49,
 1, 153, :_reduce_none,
 3, 153, :_reduce_51,
 1, 154, :_reduce_none,
 3, 154, :_reduce_53,
 1, 155, :_reduce_none,
 3, 155, :_reduce_55,
 1, 156, :_reduce_none,
 3, 156, :_reduce_57,
 1, 157, :_reduce_none,
 5, 157, :_reduce_59,
 1, 141, :_reduce_60,
 1, 158, :_reduce_61,
 3, 159, :_reduce_62,
 1, 162, :_reduce_none,
 2, 162, :_reduce_64,
 1, 161, :_reduce_65,
 3, 161, :_reduce_66,
 1, 165, :_reduce_none,
 3, 165, :_reduce_68,
 1, 163, :_reduce_69,
 1, 163, :_reduce_70,
 1, 163, :_reduce_71,
 1, 163, :_reduce_none,
 1, 163, :_reduce_none,
 1, 163, :_reduce_74,
 1, 163, :_reduce_none,
 1, 163, :_reduce_none,
 1, 163, :_reduce_77,
 1, 163, :_reduce_78,
 1, 163, :_reduce_79,
 1, 171, :_reduce_80,
 1, 171, :_reduce_81,
 1, 171, :_reduce_82,
 1, 172, :_reduce_83,
 1, 172, :_reduce_84,
 1, 172, :_reduce_85,
 1, 172, :_reduce_86,
 1, 172, :_reduce_87,
 1, 172, :_reduce_88,
 1, 172, :_reduce_89,
 1, 172, :_reduce_90,
 1, 172, :_reduce_91,
 1, 172, :_reduce_92,
 1, 172, :_reduce_93,
 1, 172, :_reduce_94,
 1, 172, :_reduce_95,
 1, 172, :_reduce_96,
 1, 172, :_reduce_97,
 1, 172, :_reduce_98,
 1, 172, :_reduce_99,
 1, 172, :_reduce_100,
 1, 172, :_reduce_101,
 1, 173, :_reduce_102,
 1, 173, :_reduce_103,
 2, 170, :_reduce_104,
 1, 170, :_reduce_none,
 0, 176, :_reduce_106,
 6, 168, :_reduce_107,
 0, 177, :_reduce_108,
 5, 168, :_reduce_109,
 2, 168, :_reduce_110,
 1, 175, :_reduce_none,
 2, 175, :_reduce_none,
 1, 174, :_reduce_113,
 3, 178, :_reduce_114,
 6, 178, :_reduce_115,
 1, 181, :_reduce_116,
 3, 181, :_reduce_117,
 1, 183, :_reduce_118,
 4, 183, :_reduce_119,
 4, 183, :_reduce_120,
 4, 183, :_reduce_121,
 1, 160, :_reduce_none,
 2, 160, :_reduce_123,
 1, 179, :_reduce_124,
 3, 179, :_reduce_125,
 1, 184, :_reduce_none,
 4, 169, :_reduce_none,
 5, 169, :_reduce_none,
 2, 169, :_reduce_none,
 1, 185, :_reduce_130,
 1, 185, :_reduce_131,
 1, 185, :_reduce_132,
 1, 185, :_reduce_133,
 1, 185, :_reduce_134,
 1, 185, :_reduce_135,
 1, 186, :_reduce_none,
 3, 186, :_reduce_none,
 1, 187, :_reduce_none,
 3, 187, :_reduce_none,
 1, 164, :_reduce_140,
 1, 164, :_reduce_141,
 2, 166, :_reduce_142,
 1, 166, :_reduce_none,
 1, 189, :_reduce_144,
 3, 189, :_reduce_145,
 4, 189, :_reduce_146,
 3, 189, :_reduce_147,
 4, 189, :_reduce_148,
 3, 189, :_reduce_149,
 1, 188, :_reduce_150,
 2, 188, :_reduce_151,
 2, 188, :_reduce_152,
 3, 188, :_reduce_153,
 1, 190, :_reduce_none,
 3, 190, :_reduce_none,
 1, 191, :_reduce_156,
 3, 191, :_reduce_157,
 3, 192, :_reduce_158,
 2, 192, :_reduce_159,
 1, 192, :_reduce_160,
 2, 192, :_reduce_161,
 3, 193, :_reduce_162,
 1, 194, :_reduce_163,
 3, 194, :_reduce_164,
 1, 195, :_reduce_165,
 1, 195, :_reduce_166,
 1, 195, :_reduce_167,
 4, 195, :_reduce_168,
 4, 195, :_reduce_169,
 1, 195, :_reduce_170,
 4, 195, :_reduce_171,
 4, 195, :_reduce_172,
 6, 195, :_reduce_173,
 4, 195, :_reduce_174,
 1, 195, :_reduce_175,
 1, 146, :_reduce_none,
 2, 146, :_reduce_177,
 1, 196, :_reduce_none,
 1, 196, :_reduce_none,
 2, 196, :_reduce_none,
 3, 197, :_reduce_181,
 2, 197, :_reduce_182,
 3, 197, :_reduce_183,
 3, 197, :_reduce_184,
 4, 197, :_reduce_185,
 2, 197, :_reduce_186,
 3, 197, :_reduce_none,
 3, 197, :_reduce_188,
 4, 197, :_reduce_189,
 1, 167, :_reduce_190,
 3, 167, :_reduce_191,
 4, 167, :_reduce_192,
 4, 167, :_reduce_193,
 1, 198, :_reduce_194,
 3, 198, :_reduce_195,
 0, 137, :_reduce_none,
 2, 137, :_reduce_none,
 1, 199, :_reduce_none,
 4, 199, :_reduce_199,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 2, 200, :_reduce_none,
 2, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 200, :_reduce_none,
 1, 201, :_reduce_214,
 3, 201, :_reduce_215,
 4, 213, :_reduce_216,
 4, 213, :_reduce_217,
 1, 213, :_reduce_218,
 4, 213, :_reduce_219,
 1, 213, :_reduce_220,
 1, 213, :_reduce_221,
 1, 213, :_reduce_222,
 6, 213, :_reduce_223,
 1, 214, :_reduce_224,
 3, 214, :_reduce_225,
 7, 217, :_reduce_226,
 10, 217, :_reduce_227,
 1, 203, :_reduce_228,
 5, 211, :_reduce_229,
 7, 211, :_reduce_230,
 5, 210, :_reduce_231,
 5, 210, :_reduce_232,
 9, 212, :_reduce_233,
 4, 202, :_reduce_234,
 7, 202, :_reduce_235,
 1, 219, :_reduce_none,
 4, 219, :_reduce_none,
 1, 218, :_reduce_238,
 3, 218, :_reduce_239,
 6, 204, :_reduce_240,
 1, 220, :_reduce_241,
 1, 221, :_reduce_none,
 2, 221, :_reduce_none,
 1, 139, :_reduce_244,
 2, 139, :_reduce_245,
 3, 139, :_reduce_246,
 6, 205, :_reduce_247,
 1, 222, :_reduce_248,
 1, 223, :_reduce_249,
 2, 223, :_reduce_250,
 3, 224, :_reduce_251,
 6, 224, :_reduce_252,
 6, 206, :_reduce_253,
 1, 225, :_reduce_254,
 1, 226, :_reduce_none,
 2, 226, :_reduce_none,
 1, 227, :_reduce_257,
 4, 227, :_reduce_258,
 1, 228, :_reduce_none,
 1, 228, :_reduce_none,
 1, 228, :_reduce_none,
 1, 228, :_reduce_none,
 1, 228, :_reduce_none,
 1, 229, :_reduce_264,
 3, 229, :_reduce_265,
 1, 235, :_reduce_266,
 4, 235, :_reduce_267,
 1, 235, :_reduce_268,
 1, 236, :_reduce_269,
 1, 236, :_reduce_270,
 3, 236, :_reduce_271,
 3, 236, :_reduce_272,
 5, 237, :_reduce_273,
 5, 237, :_reduce_274,
 4, 230, :_reduce_275,
 6, 230, :_reduce_276,
 7, 230, :_reduce_277,
 8, 230, :_reduce_278,
 1, 238, :_reduce_279,
 1, 238, :_reduce_280,
 1, 239, :_reduce_281,
 1, 240, :_reduce_none,
 1, 241, :_reduce_none,
 5, 231, :_reduce_284,
 1, 242, :_reduce_285,
 2, 242, :_reduce_286,
 1, 243, :_reduce_287,
 4, 243, :_reduce_288,
 1, 244, :_reduce_289,
 4, 244, :_reduce_290,
 5, 232, :_reduce_291,
 1, 245, :_reduce_292,
 2, 245, :_reduce_293,
 1, 246, :_reduce_294,
 4, 246, :_reduce_295,
 4, 247, :_reduce_296,
 5, 233, :_reduce_297,
 7, 233, :_reduce_298,
 5, 234, :_reduce_none,
 1, 248, :_reduce_300,
 1, 248, :_reduce_301,
 0, 249, :_reduce_none,
 2, 249, :_reduce_none,
 7, 250, :_reduce_304,
 9, 250, :_reduce_305,
 1, 251, :_reduce_none,
 1, 252, :_reduce_307,
 3, 252, :_reduce_308,
 1, 252, :_reduce_309,
 3, 252, :_reduce_310,
 0, 256, :_reduce_311,
 8, 207, :_reduce_312,
 4, 207, :_reduce_313,
 1, 253, :_reduce_314,
 1, 254, :_reduce_315,
 0, 255, :_reduce_none,
 2, 255, :_reduce_none,
 4, 257, :_reduce_318,
 1, 257, :_reduce_319,
 3, 258, :_reduce_320,
 1, 258, :_reduce_321,
 6, 260, :_reduce_322,
 1, 215, :_reduce_323,
 1, 216, :_reduce_none,
 6, 259, :_reduce_325,
 7, 259, :_reduce_326,
 4, 259, :_reduce_327,
 6, 259, :_reduce_328,
 1, 261, :_reduce_none,
 1, 262, :_reduce_none,
 6, 208, :_reduce_331,
 1, 263, :_reduce_332,
 1, 264, :_reduce_none,
 2, 264, :_reduce_none,
 1, 265, :_reduce_335,
 4, 265, :_reduce_336,
 1, 266, :_reduce_none,
 1, 266, :_reduce_none,
 1, 266, :_reduce_none,
 1, 266, :_reduce_none,
 1, 267, :_reduce_341,
 4, 272, :_reduce_342,
 1, 272, :_reduce_343,
 1, 268, :_reduce_344,
 5, 269, :_reduce_345,
 1, 273, :_reduce_346,
 2, 273, :_reduce_347,
 0, 277, :_reduce_348,
 8, 270, :_reduce_349,
 4, 270, :_reduce_350,
 1, 274, :_reduce_351,
 1, 275, :_reduce_352,
 0, 276, :_reduce_none,
 2, 276, :_reduce_none,
 2, 276, :_reduce_none,
 6, 278, :_reduce_356,
 4, 278, :_reduce_357,
 6, 271, :_reduce_358,
 8, 271, :_reduce_359,
 1, 280, :_reduce_none,
 1, 281, :_reduce_none,
 1, 279, :_reduce_none,
 9, 209, :_reduce_363,
 6, 209, :_reduce_364,
 1, 282, :_reduce_none,
 3, 282, :_reduce_none,
 6, 285, :_reduce_367,
 3, 285, :_reduce_368,
 6, 285, :_reduce_369,
 3, 285, :_reduce_370,
 8, 285, :_reduce_371,
 4, 285, :_reduce_372,
 1, 285, :_reduce_373,
 1, 285, :_reduce_374,
 4, 285, :_reduce_375,
 4, 285, :_reduce_376,
 1, 283, :_reduce_377,
 0, 284, :_reduce_none,
 2, 284, :_reduce_none,
 2, 284, :_reduce_none,
 1, 287, :_reduce_none,
 4, 287, :_reduce_none,
 1, 288, :_reduce_383,
 2, 288, :_reduce_384,
 4, 289, :_reduce_385,
 1, 286, :_reduce_386,
 1, 180, :_reduce_387,
 1, 182, :_reduce_388 ]

racc_reduce_n = 389

racc_shift_n = 770

clist = [
'10,531,633,577,169,269,634,158,631,50,50,50,50,197,199,202,204,208,212',
'217,221,440,190,420,326,327,93,90,206,211,215,220,223,189,192,328,329',
'586,578,630,417,418,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12',
'14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,407,50,641,588,269,17,20',
'22,25,30,35,41,46,10,701,152,513,3,669,239,41,46,152,50,50,170,269,152',
'28,34,40,152,51,57,257,65,93,73,275,277,306,750,309,310,297,299,95,33',
'33,33,45,56,56,56,240,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8',
'12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,388,291,269,291,638',
'17,20,22,25,30,35,41,46,10,93,93,460,275,277,278,93,139,152,50,50,267',
'152,270,28,34,40,427,51,57,639,65,410,73,292,275,277,278,93,95,93,602',
'93,267,33,270,45,461,56,128,495,18,23,27,32,37,42,48,53,58,62,66,69',
'77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,424,408,394',
'649,152,17,20,22,25,30,35,41,46,10,93,275,277,278,497,605,393,95,95',
'267,50,270,129,95,28,34,40,269,51,57,648,65,91,73,95,275,277,306,88',
'309,310,297,299,158,33,95,45,95,56,95,500,18,23,27,32,37,42,48,53,58',
'62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,243',
'420,378,753,379,17,20,22,25,30,35,41,46,378,91,647,91,91,417,418,88',
'95,88,88,90,501,90,90,28,34,40,242,51,57,752,65,190,73,197,199,202,204',
'208,212,217,221,50,190,33,722,45,93,56,206,211,215,220,223,189,192,197',
'199,202,204,208,212,217,221,759,190,326,327,760,93,662,206,211,215,220',
'223,189,192,197,199,202,204,208,212,217,331,465,190,152,463,381,93,702',
'206,211,215,220,223,189,192,144,648,91,143,765,383,723,218,88,507,513',
'158,90,197,199,202,204,208,212,217,221,380,190,380,384,339,93,209,206',
'211,215,220,223,189,192,764,382,50,509,536,563,95,107,109,111,113,97',
'99,101,197,199,202,204,208,212,217,221,686,190,429,430,431,93,95,206',
'211,215,220,223,189,192,197,199,202,204,208,212,217,221,158,190,429',
'430,431,93,95,206,211,215,220,223,189,192,197,199,202,204,208,212,217',
'221,568,190,145,146,489,93,681,206,211,215,220,223,189,192,348,190,349',
'465,350,95,463,218,514,575,158,158,158,90,158,197,199,202,204,208,212',
'217,221,554,190,725,553,209,93,218,206,211,215,220,223,189,192,726,164',
'160,521,95,480,252,554,256,515,553,139,209,139,197,199,202,204,208,212',
'217,221,144,190,767,143,95,93,768,206,211,215,220,223,189,192,197,199',
'202,204,208,212,217,221,516,190,537,538,95,93,158,206,211,215,220,223',
'189,192,197,199,202,204,208,212,217,221,591,190,594,285,518,93,519,206',
'211,215,220,223,189,192,333,334,335,336,593,95,197,199,202,204,208,212',
'217,221,592,190,708,538,190,93,523,206,211,215,220,223,189,192,485,197',
'199,202,204,208,212,217,221,478,190,543,339,95,93,530,206,211,215,220',
'223,189,192,218,353,354,356,275,277,306,477,309,310,297,299,95,355,357',
'358,359,360,361,532,209,533,197,199,202,204,208,212,217,221,534,190',
'338,337,95,93,476,206,211,215,220,223,189,192,333,334,335,336,197,199',
'202,204,208,212,217,221,475,190,321,322,474,93,95,206,211,215,220,223',
'189,192,190,197,199,202,204,208,212,217,221,347,190,338,337,318,93,95',
'206,211,215,220,223,189,192,325,319,218,545,541,323,324,473,197,199',
'202,204,208,212,217,221,472,190,353,354,356,93,209,206,211,215,220,223',
'189,192,355,357,358,359,360,361,95,197,199,202,204,208,212,217,221,469',
'190,284,285,468,93,542,206,211,215,220,223,189,192,328,329,190,95,197',
'199,202,204,208,212,217,221,426,190,328,329,425,93,422,206,211,215,220',
'223,189,192,95,197,199,202,204,208,212,217,221,415,190,328,329,180,93',
'397,206,211,215,220,223,189,192,325,333,334,335,336,323,324,95,197,199',
'202,204,208,212,217,221,396,190,328,329,391,93,386,206,211,215,220,223',
'189,192,326,327,385,377,124,375,95,197,199,202,204,208,212,217,221,342',
'190,556,546,374,93,373,206,211,215,220,223,189,192,372,371,370,95,197',
'199,202,204,208,212,217,221,369,190,364,569,570,93,339,206,211,215,220',
'223,189,192,95,197,199,202,204,208,212,217,221,571,190,573,574,575,93',
'576,206,211,215,220,223,189,192,107,109,111,113,97,99,101,95,197,199',
'202,204,208,212,217,221,352,190,579,682,351,93,581,206,211,215,220,223',
'189,192,585,91,91,91,91,347,95,88,88,88,88,90,90,90,90,342,91,91,91',
'91,339,218,88,88,88,88,90,90,90,90,91,152,95,325,332,597,88,319,323',
'324,90,209,581,318,290,197,199,202,204,208,212,217,221,180,190,95,283',
'282,93,610,206,211,215,220,223,189,192,110,112,115,98,100,102,103,105',
'107,109,111,113,97,99,101,264,613,263,95,18,23,27,32,37,42,48,53,58',
'62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,190',
'261,257,253,139,17,20,22,25,30,35,41,46,620,246,622,245,241,623,624',
'197,199,202,204,208,212,217,221,238,190,90,629,186,93,95,206,211,215',
'220,223,189,192,197,199,202,204,208,212,217,221,632,190,185,184,635',
'93,183,206,211,215,220,223,189,192,197,199,202,204,208,212,217,221,640',
'190,182,642,643,93,190,206,211,215,220,223,189,192,197,199,202,204,208',
'212,217,221,501,190,180,178,650,93,652,206,211,215,220,223,189,192,158',
'654,177,176,33,197,199,202,204,208,212,217,221,257,190,172,171,663,93',
'95,206,211,215,220,223,189,192,197,199,202,204,208,212,217,221,664,190',
'665,666,667,93,95,206,211,215,220,223,189,192,197,199,202,204,208,212',
'217,221,158,190,168,670,671,93,95,206,211,215,220,223,189,192,197,199',
'202,204,208,212,217,221,672,190,673,167,675,93,95,206,211,215,220,223',
'189,192,676,677,166,679,165,197,199,202,204,208,212,217,221,162,190',
'161,687,688,93,95,206,211,215,220,223,189,192,197,199,202,204,208,212',
'217,221,689,190,690,655,692,93,95,206,211,215,220,223,189,192,197,199',
'202,204,208,212,217,221,693,190,581,696,157,93,95,206,211,215,220,223',
'189,192,197,199,202,204,208,212,217,221,156,190,699,700,155,93,95,206',
'211,215,220,223,189,192,154,703,153,152,492,197,199,202,204,208,212',
'217,221,707,190,151,709,139,93,95,206,211,215,220,223,189,192,197,199',
'202,204,208,212,217,221,563,190,635,713,714,93,95,206,211,215,220,223',
'189,192,197,199,202,204,208,212,217,221,715,190,716,717,142,93,95,206',
'211,215,220,223,189,192,197,199,202,204,208,212,217,221,139,190,650',
'138,727,93,95,206,211,215,220,223,189,192,728,729,730,731,732,197,199',
'202,204,208,212,217,221,733,190,136,735,736,93,95,206,211,215,220,223',
'189,192,197,199,202,204,208,212,217,221,737,190,738,-362,739,93,95,206',
'211,215,220,223,189,192,197,199,202,204,208,212,217,221,740,190,133',
'132,743,93,95,206,211,215,220,223,189,192,197,199,202,204,208,212,217',
'221,131,190,190,225,746,93,95,206,211,215,220,223,189,192,127,748,749',
'124,117,197,199,202,204,208,212,217,221,754,190,755,116,757,93,95,206',
'211,215,220,223,189,192,197,199,202,204,208,212,217,221,758,190,96,762',
'269,93,95,206,211,215,220,223,189,192,83,766,81,769,,110,112,115,98',
'100,102,103,105,,95,,,,,,,,,,,,,,,218,,,,,,,95,107,109,111,113,97,99',
'101,,,,,,209,,197,199,202,204,208,212,217,221,,190,,,95,93,,206,211',
'215,220,223,189,192,,,,,,,,,,,,,95,,,,,,,18,23,27,32,37,42,48,53,58',
'62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,',
',,,,17,20,22,25,30,35,41,46,,,,,,,,197,199,202,204,208,212,217,221,',
'190,,625,,93,95,206,211,215,220,223,189,192,197,199,202,204,208,212',
'217,221,,190,,,,93,,206,211,215,220,223,189,192,197,199,202,204,208',
'212,217,221,,190,,546,,93,,206,211,215,220,223,189,192,197,199,202,204',
'208,212,217,221,,190,,,,93,,206,211,215,220,223,189,192,,,,,,197,199',
'202,204,208,212,217,221,,190,,,,93,95,206,211,215,220,223,189,192,197',
'199,202,204,208,212,217,221,,190,,,,93,95,206,211,215,220,223,189,192',
'197,199,202,204,208,212,217,221,,190,,,,93,95,206,211,215,220,223,189',
'192,,,,,,,,,,,,,,,95,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55',
'60,64,,,,,,,,95,,,,,,,,,,218,465,552,,549,,,,,,,90,95,,,,,,,,209,,,',
',,,,,,,,,,95,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16',
'19,21,24,29,39,44,49,55,60,64,68,71,75,234,,50,,,17,20,22,25,30,35,41',
'46,,,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8',
'12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,628,,50,,,17,20,22,25',
'30,35,41,46,,,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58,62,66,69',
'77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,50,,,,,17',
'20,22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58,62',
'66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,50,',
',,,17,20,22,25,30,35,41,46,481,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48',
'53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71',
'75,50,438,,,,17,20,22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18,23,27,32,37',
'42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64',
'68,71,75,50,,,,,17,20,22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18,23,27,32',
'37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60',
'64,68,71,75,50,,,,,17,20,22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18,23,27',
'32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55',
'60,64,68,71,75,50,607,,,,17,20,22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18',
'23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44',
'49,55,60,64,68,71,75,50,590,,,,17,20,22,25,30,35,41,46,,,,,,,,,,,,,',
',,,,,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24',
'29,39,44,49,55,60,64,68,71,75,50,,,,,17,20,22,25,30,35,41,46,,,,,,,',
',,,,,,,,,,,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19',
'21,24,29,39,44,49,55,60,64,68,71,75,50,609,,,,17,20,22,25,30,35,41,46',
',,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14',
'16,19,21,24,29,39,44,49,55,60,64,68,71,75,50,,,,,17,20,22,25,30,35,41',
'46,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12',
'14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,50,414,,,,17,20,22,25,30',
'35,41,46,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58,62,66,69,77,80',
'5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,50,539,,,,17,20',
'22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58,62,66',
'69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,119,,,',
',17,20,22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53,58',
'62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,50',
',,,,17,20,22,25,30,35,41,46,,,,,,,,,,,,,,,,,,,18,23,27,32,37,42,48,53',
'58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75',
',,,,,17,20,22,25,30,35,41,46,18,23,27,32,37,42,48,53,58,62,66,69,77',
'80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,,,,,,17,20,22',
'25,30,35,41,46,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16',
'19,21,24,29,39,44,49,55,60,64,68,71,75,,,,,,17,20,22,25,30,35,41,46',
'18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39',
'44,49,55,60,64,68,71,75,,,,,,17,20,22,25,30,35,41,46,18,23,27,32,37',
'42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64',
'68,71,75,,,,,,17,20,22,25,30,35,41,46,18,23,27,32,37,42,48,53,58,62',
'66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,,,,',
',17,20,22,25,30,35,41,46,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5',
'8,12,14,16,19,21,24,29,39,44,49,55,60,64,68,71,75,,,,,,17,20,22,25,30',
'35,41,46,18,23,27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21',
'24,29,39,44,49,55,60,64,68,71,75,,,,,,17,20,22,25,30,35,41,46,18,23',
'27,32,37,42,48,53,58,62,66,69,77,80,5,8,12,14,16,19,21,24,29,39,44,49',
'55,60,64,68,71,75,,,,,,17,20,22,25,30,35' ]
racc_action_table = arr = Array.new(3512, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

clist = [
'159,428,560,496,116,738,561,511,558,183,286,159,572,652,652,652,652',
'652,652,652,652,317,652,521,450,450,652,90,652,652,652,652,652,652,652',
'205,205,504,496,558,521,521,159,159,159,159,159,159,159,159,159,159',
'159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159',
'159,159,159,159,159,286,171,572,504,171,159,159,159,159,159,159,159',
'159,2,658,317,511,1,612,150,90,90,428,265,2,116,265,560,159,159,159',
'561,159,159,380,159,593,159,183,183,183,738,183,183,183,183,652,286',
'159,572,159,286,159,572,150,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2',
'2,2,2,2,2,2,2,2,2,2,2,2,265,289,499,181,567,2,2,2,2,2,2,2,2,288,267',
'280,340,171,171,171,478,382,658,305,288,171,612,171,2,2,2,310,2,2,567',
'2,289,2,181,265,265,265,530,593,477,522,186,265,2,265,2,340,2,61,388',
'288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288',
'288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,305,288',
'272,582,389,288,288,288,288,288,288,288,288,177,33,499,499,499,390,522',
'272,267,280,499,177,499,61,478,288,288,288,391,288,288,582,288,85,288',
'310,305,305,305,85,305,305,305,305,392,288,530,288,477,288,186,394,177',
'177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177',
'177,177,177,177,177,177,177,177,177,177,177,177,177,177,154,303,257',
'744,257,177,177,177,177,177,177,177,177,581,538,581,598,122,303,303',
'538,33,598,122,538,396,598,122,177,177,177,154,177,177,744,177,377,177',
'639,639,639,639,639,639,639,639,691,639,177,691,177,639,177,639,639',
'639,639,639,639,639,735,735,735,735,735,735,735,735,752,735,451,451',
'752,735,599,735,735,735,735,735,735,735,206,206,206,206,206,206,206',
'206,464,206,398,464,258,206,660,206,206,206,206,206,206,206,141,599',
'296,141,761,260,691,639,296,399,405,432,296,730,730,730,730,730,730',
'730,730,258,730,660,262,262,730,639,730,730,730,730,730,730,730,761',
'260,484,400,432,484,639,405,405,405,405,405,405,405,726,726,726,726',
'726,726,726,726,639,726,313,313,313,726,735,726,726,726,726,726,726',
'726,725,725,725,725,725,725,725,725,636,725,536,536,536,725,206,725',
'725,725,725,725,725,725,713,713,713,713,713,713,713,713,484,713,89,89',
'376,713,636,713,713,713,713,713,713,713,224,375,224,344,224,730,344',
'726,407,693,108,104,421,344,362,347,347,347,347,347,347,347,347,548',
'347,693,548,726,347,725,347,347,347,347,347,347,347,693,108,104,421',
'726,362,162,467,165,408,467,162,725,165,193,193,193,193,193,193,193',
'193,87,193,764,87,725,193,764,193,193,193,193,193,193,193,342,342,342',
'342,342,342,342,342,414,342,435,435,713,342,415,342,342,342,342,342',
'342,342,689,689,689,689,689,689,689,689,508,689,510,510,416,689,420',
'689,689,689,689,689,689,689,458,458,458,458,508,347,338,338,338,338',
'338,338,338,338,508,338,674,674,374,338,424,338,338,338,338,338,338',
'338,369,337,337,337,337,337,337,337,337,360,337,453,453,193,337,427',
'337,337,337,337,337,337,337,689,228,228,228,520,520,520,359,520,520',
'520,520,342,228,228,228,228,228,228,429,689,430,460,460,460,460,460',
'460,460,460,431,460,214,214,689,460,356,460,460,460,460,460,460,460',
'459,459,459,459,336,336,336,336,336,336,336,336,354,336,195,195,353',
'336,338,336,336,336,336,336,336,336,440,335,335,335,335,335,335,335',
'335,441,335,462,462,442,335,337,335,335,335,335,335,335,335,448,443',
'460,460,444,448,448,350,667,667,667,667,667,667,667,667,349,667,480',
'480,480,667,460,667,667,667,667,667,667,667,480,480,480,480,480,480',
'460,663,663,663,663,663,663,663,663,346,663,175,175,345,663,452,663',
'663,663,663,663,663,663,454,454,332,336,334,334,334,334,334,334,334',
'334,309,334,455,455,306,334,304,334,334,334,334,334,334,334,335,348',
'348,348,348,348,348,348,348,294,348,456,456,291,348,278,348,348,348',
'348,348,348,348,201,210,210,210,210,201,201,667,282,282,282,282,282',
'282,282,282,273,282,457,457,270,282,264,282,282,282,282,282,282,282',
'203,203,263,255,253,251,663,463,463,463,463,463,463,463,463,470,463',
'471,463,250,463,246,463,463,463,463,463,463,463,245,244,243,334,333',
'333,333,333,333,333,333,333,242,333,229,485,486,333,487,333,333,333',
'333,333,333,333,348,749,749,749,749,749,749,749,749,488,749,490,491',
'492,749,494,749,749,749,749,749,749,749,247,247,247,247,247,247,247',
'282,638,638,638,638,638,638,638,638,227,638,498,638,226,638,500,638',
'638,638,638,638,638,638,502,91,401,232,31,222,463,91,401,232,31,91,401',
'232,31,219,365,617,314,146,216,749,365,617,314,146,365,617,314,146,285',
'213,333,449,209,513,285,191,449,449,285,749,519,187,180,331,331,331',
'331,331,331,331,331,178,331,749,173,172,331,527,331,331,331,331,331',
'331,331,160,160,160,160,160,160,160,160,164,164,164,164,164,164,164',
'170,531,169,638,331,331,331,331,331,331,331,331,331,331,331,331,331',
'331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331',
'331,331,168,167,166,163,161,331,331,331,331,331,331,331,331,540,157',
'547,156,152,550,551,329,329,329,329,329,329,329,329,149,329,148,557',
'140,329,331,329,329,329,329,329,329,329,630,630,630,630,630,630,630',
'630,559,630,137,135,564,630,134,630,630,630,630,630,630,630,328,328',
'328,328,328,328,328,328,568,328,130,574,575,328,576,328,328,328,328',
'328,328,328,469,469,469,469,469,469,469,469,579,469,129,128,585,469',
'586,469,469,469,469,469,469,469,587,590,126,125,596,474,474,474,474',
'474,474,474,474,597,474,119,118,604,474,329,474,474,474,474,474,474',
'474,327,327,327,327,327,327,327,327,605,327,607,609,610,327,630,327',
'327,327,327,327,327,327,326,326,326,326,326,326,326,326,611,326,112',
'613,614,326,328,326,326,326,326,326,326,326,325,325,325,325,325,325',
'325,325,615,325,616,111,620,325,469,325,325,325,325,325,325,325,626',
'627,110,635,109,532,532,532,532,532,532,532,532,107,532,105,641,642',
'532,474,532,532,532,532,532,532,532,591,591,591,591,591,591,591,591',
'643,591,644,591,646,591,327,591,591,591,591,591,591,591,324,324,324',
'324,324,324,324,324,647,324,648,651,101,324,326,324,324,324,324,324',
'324,324,323,323,323,323,323,323,323,323,99,323,655,657,98,323,325,323',
'323,323,323,323,323,323,96,661,95,94,379,475,475,475,475,475,475,475',
'475,669,475,92,678,679,475,532,475,475,475,475,475,475,475,322,322,322',
'322,322,322,322,322,680,322,681,682,684,322,591,322,322,322,322,322',
'322,322,533,533,533,533,533,533,533,533,685,533,686,688,86,533,324,533',
'533,533,533,533,533,533,534,534,534,534,534,534,534,534,83,534,692,76',
'697,534,323,534,534,534,534,534,534,534,700,701,704,705,707,321,321',
'321,321,321,321,321,321,710,321,75,714,716,321,475,321,321,321,321,321',
'321,321,319,319,319,319,319,319,319,319,717,319,720,722,723,319,322',
'319,319,319,319,319,319,319,541,541,541,541,541,541,541,541,724,541',
'73,72,729,541,533,541,541,541,541,541,541,541,143,143,143,143,143,143',
'143,143,65,143,733,143,734,143,534,143,143,143,143,143,143,143,57,736',
'737,56,45,218,218,218,218,218,218,218,218,745,218,747,40,750,218,321',
'218,218,218,218,218,218,218,318,318,318,318,318,318,318,318,751,318',
'34,753,757,318,319,318,318,318,318,318,318,318,28,763,3,765,,36,36,36',
'36,36,36,36,36,,541,,,,,,,,,,,,,,,218,,,,,,,143,36,36,36,36,36,36,36',
',,,,,218,,221,221,221,221,221,221,221,221,,221,,,218,221,,221,221,221',
'221,221,221,221,,,,,,,,,,,,,318,,,,,,,221,221,221,221,221,221,221,221',
'221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221',
'221,221,221,221,221,221,221,,,,,,221,221,221,221,221,221,221,221,,,',
',,,,553,553,553,553,553,553,553,553,,553,,553,,553,221,553,553,553,553',
'553,553,553,290,290,290,290,290,290,290,290,,290,,,,290,,290,290,290',
'290,290,290,290,549,549,549,549,549,549,549,549,,549,,549,,549,,549',
'549,549,549,549,549,549,476,476,476,476,476,476,476,476,,476,,,,476',
',476,476,476,476,476,476,476,,,,,,155,155,155,155,155,155,155,155,,155',
',,,155,553,155,155,155,155,155,155,155,378,378,378,378,378,378,378,378',
',378,,,,378,290,378,378,378,378,378,378,378,142,142,142,142,142,142',
'142,142,,142,,,,142,549,142,142,142,142,142,142,142,,,,,,,,,,,,,,,476',
'11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,,,,,,,,155',
',,,,,,,,,142,465,465,,465,,,,,,,465,378,,,,,,,,142,,,,,,,,,,,,,,142',
'465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465',
'465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,144,,144',
',,465,465,465,465,465,465,465,465,,,,,,,,,,,,,,,,,,,,,144,144,144,144',
'144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144',
'144,144,144,144,144,144,144,144,144,144,144,554,,554,,,144,144,144,144',
'144,144,144,144,,,,,,,,,,,,,,,,,,,,,554,554,554,554,554,554,554,554',
'554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554',
'554,554,554,554,554,554,554,364,,,,,554,554,554,554,554,554,554,554',
',,,,,,,,,,,,,,,,,,364,364,364,364,364,364,364,364,364,364,364,364,364',
'364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364',
'364,364,315,,,,,364,364,364,364,364,364,364,364,364,,,,,,,,,,,,,,,,',
',315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315',
'315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,425,315',
',,,315,315,315,315,315,315,315,315,,,,,,,,,,,,,,,,,,,425,425,425,425',
'425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425',
'425,425,425,425,425,425,425,425,425,425,425,182,,,,,425,425,425,425',
'425,425,425,425,,,,,,,,,,,,,,,,,,,182,182,182,182,182,182,182,182,182',
'182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182',
'182,182,182,182,182,182,524,,,,,182,182,182,182,182,182,182,182,,,,',
',,,,,,,,,,,,,,524,524,524,524,524,524,524,524,524,524,524,524,524,524',
'524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524',
'524,506,524,,,,524,524,524,524,524,524,524,524,,,,,,,,,,,,,,,,,,,506',
'506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506',
'506,506,506,506,506,506,506,506,506,506,506,506,506,506,426,506,,,,506',
'506,506,506,506,506,506,506,,,,,,,,,,,,,,,,,,,426,426,426,426,426,426',
'426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426',
'426,426,426,426,426,426,426,426,426,526,,,,,426,426,426,426,426,426',
'426,426,,,,,,,,,,,,,,,,,,,526,526,526,526,526,526,526,526,526,526,526',
'526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526',
'526,526,526,526,397,526,,,,526,526,526,526,526,526,526,526,,,,,,,,,',
',,,,,,,,,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397',
'293,,,,,397,397,397,397,397,397,397,397,,,,,,,,,,,,,,,,,,,293,293,293',
'293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293',
'293,293,293,293,293,293,293,293,293,293,293,293,439,293,,,,293,293,293',
'293,293,293,293,293,,,,,,,,,,,,,,,,,,,439,439,439,439,439,439,439,439',
'439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439',
'439,439,439,439,439,439,439,316,439,,,,439,439,439,439,439,439,439,439',
',,,,,,,,,,,,,,,,,,316,316,316,316,316,316,316,316,316,316,316,316,316',
'316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316',
'316,316,51,,,,,316,316,316,316,316,316,316,316,,,,,,,,,,,,,,,,,,,51',
'51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51',
'51,51,51,51,51,51,51,51,184,,,,,51,51,51,51,51,51,51,51,,,,,,,,,,,,',
',,,,,,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184',
'184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,,,,',
',184,184,184,184,184,184,184,184,653,653,653,653,653,653,653,653,653',
'653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653',
'653,653,653,653,653,653,,,,,,653,653,653,653,653,653,653,653,517,517',
'517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517',
'517,517,517,517,517,517,517,517,517,517,517,517,517,,,,,,517,517,517',
'517,517,517,517,517,283,283,283,283,283,283,283,283,283,283,283,283',
'283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283',
'283,283,283,,,,,,283,283,283,283,283,283,283,283,535,535,535,535,535',
'535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535',
'535,535,535,535,535,535,535,535,535,535,,,,,,535,535,535,535,535,535',
'535,535,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52',
'52,52,52,52,52,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52,52,52,231',
'231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231',
'231,231,231,231,231,231,231,231,231,231,231,231,231,231,,,,,,231,231',
'231,231,231,231,231,231,668,668,668,668,668,668,668,668,668,668,668',
'668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668',
'668,668,668,668,,,,,,668,668,668,668,668,668,668,668,235,235,235,235',
'235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235',
'235,235,235,235,235,235,235,235,235,235,235,,,,,,235,235,235,235,235',
'235' ]
racc_action_check = arr = Array.new(3512, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

racc_action_pointer = [
   nil,    91,    86,  1710,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1973,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1699,   nil,
   nil,  1056,   nil,   247,  1687,   nil,  1617,   nil,   nil,   nil,
  1666,   nil,   nil,   nil,   nil,  1648,   nil,   nil,   nil,   nil,
   nil,  3003,  3291,   nil,   nil,   nil,  1647,  1644,   nil,   nil,
   nil,   199,   nil,   nil,   nil,  1630,   nil,   nil,   nil,   nil,
   nil,   nil,  1586,  1610,   nil,  1566,  1515,   nil,   nil,   nil,
   nil,   nil,   nil,  1537,   nil,   275,  1492,   604,   nil,   502,
     8,  1053,  1473,   nil,  1367,  1460,  1462,   nil,  1454,  1450,
   nil,  1432,   nil,   nil,   552,  1386,   nil,  1384,   551,  1375,
  1373,  1360,  1337,   nil,   nil,   nil,    -7,   nil,  1228,  1225,
   nil,   nil,   343,   nil,   nil,  1215,  1214,   nil,  1201,  1260,
  1178,   nil,   nil,   nil,  1160,  1157,   nil,  1156,   nil,   nil,
  1170,   430,  1987,  1635,  2119,   nil,  1071,   nil,  1190,  1197,
    53,   nil,  1181,   nil,   325,  1943,  1180,  1178,   nil,    -1,
  1032,  1168,   587,  1055,  1008,   589,  1166,  1165,  1168,  1135,
  1133,    63,  1109,  1104,   nil,   822,   nil,   260,  1099,   nil,
  1063,   123,  2436,    -3,  3066,   nil,   192,  1069,   nil,   nil,
   nil,  1062,   nil,   603,   nil,   743,   nil,   nil,   nil,   nil,
   nil,   904,   nil,   933,   nil,     9,   415,   nil,   nil,  1086,
   896,   nil,   nil,   983,   722,   nil,  1070,   nil,  1662,  1058,
   nil,  1757,  1032,   nil,   542,   nil,  1038,  1037,   646,   955,
   nil,  3336,  1055,   nil,   nil,  3426,   nil,   nil,   nil,   nil,
   nil,   nil,   983,   944,   973,   972,   964,   903,   nil,   nil,
   931,   917,   nil,   942,   nil,   915,   nil,   325,   419,   nil,
   434,   nil,   453,   915,   905,    85,   nil,   160,   nil,   nil,
   929,   nil,   154,   813,   nil,   nil,   nil,   nil,   840,   nil,
   161,   nil,   929,  3201,   nil,  1082,    -2,   nil,   173,   121,
  1872,   898,   nil,  2814,   798,   nil,   432,   nil,   nil,   nil,
   nil,   nil,   nil,   240,   817,   172,   815,   nil,   nil,   811,
   177,   nil,   nil,   421,  1070,  2310,  2940,   -20,  1684,  1591,
   nil,  1569,  1498,  1449,  1427,  1356,  1334,  1312,  1241,  1197,
   nil,  1104,   865,   984,   876,   791,   768,   698,   675,   nil,
   136,   nil,   625,   nil,   548,   854,   850,   567,   899,   816,
   807,   nil,   nil,   773,   769,   nil,   749,   nil,   nil,   720,
   699,   nil,   555,   nil,  2247,  1068,   nil,   nil,   nil,   689,
   nil,   nil,   nil,   nil,   678,   544,   469,   360,  1965,  1462,
    93,   nil,   167,   nil,   nil,   nil,   nil,   nil,   175,   143,
   251,   264,   282,   nil,   293,   nil,   345,  2751,   318,   433,
   467,  1054,   nil,   nil,   nil,   353,   nil,   522,   560,   nil,
   nil,   nil,   nil,   nil,   595,   628,   621,   nil,   nil,   nil,
   654,   553,   nil,   nil,   651,  2373,  2625,   672,   -13,   732,
   734,   743,   437,   nil,   nil,   597,   nil,   nil,   nil,  2877,
   781,   767,   770,   780,   780,   nil,   nil,   nil,   796,  1075,
     4,   385,   856,   700,   848,   862,   885,   915,   643,   738,
   742,   nil,   771,   958,   416,  2054,   nil,   589,   nil,  1263,
   950,   957,   nil,   nil,  1290,  1476,  1916,   190,   166,   nil,
   756,   nil,   nil,   nil,   464,   957,   988,   989,  1007,   nil,
  1009,  1007,  1007,   nil,   982,   nil,   -37,   nil,   923,   148,
  1038,   nil,  1047,   nil,   -41,   nil,  2562,   nil,   645,   nil,
   619,    -6,   nil,  1087,   nil,   nil,   nil,  3156,   nil,  1088,
   611,   -73,   191,   nil,  2499,   nil,  2688,  1042,   nil,   nil,
   188,  1129,  1383,  1520,  1542,  3246,   443,   nil,   340,   nil,
  1182,  1613,   nil,   nil,   nil,   nil,   nil,  1181,   568,  1894,
  1187,  1188,   nil,  1850,  2184,   nil,   nil,  1200,    -2,  1219,
    -8,    -4,   nil,   nil,  1109,   nil,   nil,   153,  1211,   nil,
   nil,   nil,     0,   nil,  1240,  1240,  1246,   nil,   nil,  1258,
   nil,   336,   241,   nil,   nil,  1262,  1270,  1274,   nil,   nil,
  1248,  1405,   nil,    95,   nil,   nil,  1168,  1285,   342,   399,
   nil,   nil,   nil,   nil,  1295,  1282,   nil,  1284,   nil,  1285,
  1317,  1331,    78,  1307,  1338,  1356,  1358,  1069,   nil,   nil,
  1330,   nil,   nil,   nil,   nil,   nil,  1367,  1371,   nil,   nil,
  1219,   nil,   nil,   nil,   nil,  1374,   505,   nil,  1037,   371,
   nil,  1356,  1382,  1373,  1407,   nil,  1405,  1422,  1424,   nil,
   nil,  1400,    11,  3111,   nil,  1421,   nil,  1449,    74,   nil,
   421,  1434,   nil,   850,   nil,   nil,   nil,   821,  3381,  1471,
   nil,   nil,   nil,   nil,   647,   nil,   nil,   nil,  1479,  1475,
  1493,  1386,  1469,   nil,  1499,  1490,  1518,   nil,  1519,   647,
   nil,   369,  1539,   549,   nil,   nil,   nil,  1546,   nil,   nil,
  1526,  1552,   nil,   nil,  1527,  1559,   nil,  1530,   nil,   nil,
  1538,   nil,   nil,   530,  1540,   nil,  1568,  1586,   nil,   nil,
  1477,   nil,  1478,  1565,  1583,   508,   486,   nil,   nil,  1587,
   450,   nil,   nil,  1636,  1609,   393,  1620,  1619,   -10,   nil,
   nil,   nil,   nil,   nil,   328,  1662,   nil,  1634,   nil,  1007,
  1662,  1654,   392,  1657,   nil,   nil,   nil,  1683,   nil,   nil,
   nil,   433,   nil,  1669,   604,  1671,   nil,   nil,   nil,   nil ]

racc_action_default = [
  -196,  -389,    -1,  -389,   -76,   -87,  -209,  -105,   -88,  -210,
  -213,  -389,   -89,  -211,   -90,  -212,   -91,  -130,   -69,   -92,
  -131,   -93,  -132,   -70,   -94,  -133,  -228,   -71,  -389,   -95,
  -134,  -389,   -74,  -389,  -389,  -135,  -389,   -77,  -197,   -96,
  -389,  -140,   -78,  -198,   -97,  -389,  -141,  -122,   -79,   -98,
  -387,  -389,  -389,   -80,  -200,   -99,  -389,  -389,   -81,  -201,
  -100,  -389,   -82,  -202,  -101,  -389,   -83,  -203,  -102,   -84,
  -204,  -103,   -72,  -389,  -205,  -108,   -73,   -85,  -206,   -75,
   -86,   770,  -104,  -389,   -65,  -389,   -67,  -143,  -144,  -389,
  -150,  -389,  -389,  -244,  -314,  -389,  -389,  -374,  -389,  -389,
  -220,  -389,  -221,  -222,  -389,  -389,  -214,  -389,  -389,  -389,
  -389,  -389,  -389,  -373,  -365,  -218,  -389,  -332,  -389,  -389,
   -72,   -73,  -389,  -123,  -377,  -389,  -389,  -241,  -129,  -389,
  -389,  -248,  -208,  -254,  -389,  -389,  -113,  -110,  -207,  -323,
  -389,  -142,  -389,  -389,  -389,   -62,  -389,  -152,  -151,  -389,
  -389,  -315,  -389,  -245,  -389,  -389,  -389,  -389,  -388,  -389,
  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -389,
  -389,  -389,  -236,  -389,  -238,  -389,  -378,  -389,  -389,  -136,
  -138,  -389,  -389,  -389,  -389,  -106,  -389,   -54,   -28,   -26,
   -12,   -56,   -27,  -389,   -68,   -58,   -30,    -3,   -61,    -4,
  -190,   -34,    -5,   -37,    -6,   -40,  -389,   -14,    -7,  -389,
   -45,   -22,    -8,    -2,   -48,   -23,   -10,    -9,  -389,   -50,
   -24,  -389,   -52,   -25,   -18,  -147,  -389,  -389,  -389,  -154,
  -156,  -389,  -160,   -63,  -149,  -389,   -66,  -153,  -145,  -313,
  -311,  -246,  -389,  -389,  -389,  -389,  -389,  -389,  -199,  -215,
  -389,  -389,  -368,  -389,  -366,  -389,  -370,  -389,  -389,  -224,
  -389,  -386,  -389,  -389,  -389,  -389,  -333,  -389,  -335,  -360,
  -389,  -337,  -389,  -389,  -338,  -279,  -339,  -280,  -389,  -340,
  -389,  -344,  -389,  -389,  -234,  -389,  -389,  -242,  -389,  -389,
  -389,  -389,  -127,  -389,  -389,  -249,  -389,  -300,  -260,  -301,
  -261,  -262,  -263,  -389,  -389,  -389,  -389,  -255,  -257,  -389,
  -389,  -259,  -111,  -389,  -389,  -389,  -389,  -389,  -389,  -389,
   -19,  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -389,
   -20,  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -389,   -13,
  -389,  -194,  -389,   -60,  -176,  -389,  -389,  -389,  -389,  -389,
  -389,  -146,  -148,  -170,  -389,  -165,  -389,  -166,  -167,  -389,
  -389,  -175,  -389,  -163,  -389,  -161,  -159,   -64,  -316,  -389,
  -229,  -219,  -375,  -376,  -389,  -389,  -389,  -389,  -389,  -389,
  -389,  -216,  -389,  -372,  -217,  -231,  -232,  -334,  -389,  -351,
  -389,  -389,  -389,  -343,  -389,  -341,  -389,  -389,  -281,  -389,
  -389,  -389,  -239,  -380,  -379,  -389,  -381,  -389,  -389,  -243,
  -128,  -139,  -137,  -250,  -389,  -389,  -389,  -266,  -268,  -264,
  -389,  -389,  -302,  -256,  -389,  -389,  -389,  -244,  -389,  -118,
  -389,  -389,  -389,  -116,  -126,  -389,  -124,  -112,  -109,  -389,
  -389,   -53,   -55,   -57,  -389,   -32,   -33,   -31,   -35,   -36,
   -38,   -39,  -389,  -389,   -41,   -42,   -43,   -44,   -47,   -46,
  -389,  -191,   -49,  -389,  -178,  -389,  -177,  -179,   -11,  -389,
   -51,  -389,   -16,   -17,  -389,  -389,  -389,  -389,  -389,  -162,
  -389,  -155,  -157,  -158,  -389,  -389,  -389,  -324,  -389,  -378,
  -389,  -389,  -389,  -225,  -389,  -331,  -389,  -352,  -389,  -389,
  -389,  -361,  -389,  -346,  -389,  -287,  -389,  -282,  -389,  -237,
  -389,  -389,  -383,  -389,  -364,  -240,  -247,  -389,  -251,  -389,
  -389,  -389,  -389,  -253,  -389,  -285,  -389,  -389,  -292,  -294,
  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -114,  -389,  -107,
  -389,  -389,   -21,  -193,  -195,  -192,  -182,  -389,  -180,  -387,
  -389,  -389,  -186,  -389,  -389,   -29,   -15,  -389,  -389,  -389,
  -389,  -389,  -164,  -329,  -389,  -317,  -319,  -389,  -389,  -230,
  -223,  -367,  -389,  -369,  -389,  -389,  -389,  -350,  -348,  -389,
  -336,  -389,  -389,  -269,  -270,  -389,  -389,  -389,  -289,  -347,
  -389,  -389,  -275,  -389,  -235,  -384,  -389,  -389,  -389,  -389,
  -258,  -265,  -306,  -303,  -389,  -389,  -286,  -389,  -293,  -389,
  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -389,  -117,  -125,
  -389,   -59,  -183,  -187,  -181,  -184,  -389,  -389,  -188,  -171,
  -389,  -172,  -174,  -168,  -169,  -389,  -389,  -321,  -389,  -389,
  -312,  -389,  -389,  -389,  -389,  -353,  -389,  -389,  -389,  -342,
  -362,  -389,  -389,  -389,  -345,  -389,  -283,  -389,  -389,  -382,
  -389,  -389,  -267,  -389,  -299,  -284,  -291,  -389,  -389,  -389,
  -297,  -119,  -120,  -121,  -389,  -233,  -185,  -189,  -389,  -389,
  -389,  -389,  -389,  -330,  -389,  -389,  -389,  -363,  -389,  -389,
  -371,  -389,  -389,  -389,  -271,  -272,  -358,  -389,  -288,  -276,
  -389,  -389,  -385,  -252,  -389,  -389,  -295,  -389,  -115,  -173,
  -389,  -318,  -320,  -389,  -389,  -327,  -389,  -389,  -226,  -355,
  -389,  -354,  -329,  -389,  -389,  -389,  -389,  -290,  -277,  -389,
  -389,  -296,  -298,  -389,  -389,  -389,  -389,  -389,  -389,  -349,
  -359,  -274,  -273,  -278,  -389,  -389,  -325,  -389,  -328,  -389,
  -389,  -389,  -389,  -389,  -322,  -326,  -227,  -389,  -357,  -309,
  -307,  -389,  -304,  -389,  -389,  -389,  -356,  -310,  -308,  -305 ]

racc_goto_table = [
    36,   194,   140,   258,    86,   226,   159,   227,   262,   233,
   163,   147,    94,   122,   123,   498,   286,   244,   311,   486,
   488,   148,   490,   435,   403,   406,    38,   175,   343,    76,
   433,   493,    72,   363,   505,   565,   419,   125,   307,   502,
   503,   315,   106,   466,   437,   295,   320,   651,   346,   181,
   528,   266,   582,   512,   637,   448,   449,   400,   761,    84,
   450,   451,   505,   529,   149,   458,   459,   248,   525,   237,
   340,   599,   548,   362,   482,   235,   141,   341,   412,   173,
   250,   251,   126,   288,   255,   540,   130,   293,   619,   343,
   454,   455,   456,   457,   134,   174,   233,   444,   289,   305,
   367,   432,   600,   421,   135,   316,   137,   694,   399,   508,
   657,   524,    82,   587,   526,   365,   611,   522,   603,    86,
   604,   104,    92,   471,   150,   484,   368,    89,   636,   343,
   711,   443,   684,   118,   265,   442,   580,   392,   343,   395,
   311,   506,   390,   505,   296,   387,   314,   496,   691,   589,
   608,   584,   411,   720,   724,   343,   413,   247,   452,   595,
   423,   505,   235,   529,   551,   317,   249,   606,   437,   272,
   584,   712,   453,   439,   236,    36,   445,   446,   447,   645,
   294,   303,   313,   344,   719,   441,    76,   470,   462,    72,
   330,     2,   254,   260,   511,     1,   nil,   nil,   nil,   nil,
   nil,   287,   nil,   nil,    76,   366,   nil,    72,   nil,   nil,
   nil,   nil,   nil,   nil,   487,   487,   nil,   487,   nil,   nil,
   nil,   644,   646,   nil,   nil,   nil,   nil,   nil,   nil,   233,
   nil,   nil,   nil,   nil,   376,   nil,   nil,   nil,   nil,   nil,
   491,   nil,   721,   nil,   nil,   401,   389,   nil,   nil,   557,
   558,   559,   nil,   618,   601,   296,   nil,   nil,   402,   398,
   nil,   nil,   nil,   272,   479,   464,   nil,   nil,   nil,   416,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   314,   314,   nil,
   487,   343,   343,   343,   405,   562,    36,   nil,   nil,   428,
   698,   294,   nil,   344,   499,   235,   nil,   nil,   nil,   695,
   nil,   494,   nil,   303,   nil,   706,   510,   614,   615,   616,
   403,   406,   409,   313,   313,    76,   nil,   517,    72,   544,
   nil,   nil,   555,   520,   nil,   547,   674,   nil,   550,   572,
   233,   nil,   nil,   nil,   535,   659,   nil,   nil,   483,   343,
   343,   343,   nil,   nil,   nil,   nil,   nil,   nil,   621,   nil,
   nil,   nil,   nil,   nil,   nil,   311,   nil,   nil,   nil,   nil,
   nil,   nil,   751,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   174,   nil,   nil,   nil,   745,   nil,
   nil,   763,   nil,   nil,   nil,   nil,   464,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   504,   235,   nil,   nil,   nil,
   nil,   314,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   547,   nil,   596,   nil,   626,   487,   627,   nil,   233,
   nil,   nil,   nil,   504,   527,   nil,   nil,   697,   nil,   nil,
   nil,   nil,   nil,   nil,   660,   nil,   nil,   313,   nil,   nil,
   nil,   nil,   705,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   656,   nil,   nil,   560,   561,   nil,   343,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   343,   nil,   nil,   nil,   nil,   598,
   nil,   nil,   564,   nil,   nil,   235,   nil,   nil,   734,   653,
   nil,   nil,   678,   nil,   nil,   nil,   nil,   617,   685,   nil,
   683,   nil,   nil,   nil,   504,   nil,   nil,   nil,   nil,   612,
   747,   nil,   nil,   668,   nil,   nil,   nil,   nil,   nil,   nil,
   343,   nil,   504,   nil,   527,   704,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   680,   nil,
   nil,   nil,   343,   nil,   nil,   nil,   nil,   nil,   718,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   405,   661,   658,   487,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   741,   742,   nil,   nil,   nil,   nil,
   nil,   nil,   744,   nil,   nil,   nil,   nil,   nil,   710,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   756,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   564 ]

racc_goto_check = [
    45,    32,    80,    79,    31,    23,    47,    55,     5,    28,
    47,    53,     4,    25,    25,   145,   149,    23,    95,    81,
    81,    29,    81,    44,    74,    72,    64,    83,    22,    34,
    48,    82,    33,    60,    24,   122,   100,   148,    92,   146,
   108,    40,    78,    61,    43,    89,    10,   144,    11,    51,
   111,   130,   101,   154,   125,    12,    12,     6,   117,    30,
    13,    13,    24,    24,    31,    15,    15,    65,   108,    53,
    63,   101,    62,    59,    57,    29,    54,    32,    52,    84,
    80,    80,    85,    86,    80,    81,    87,    88,    49,    22,
    14,    14,    14,    14,    90,    31,    28,     6,    51,    91,
    28,    46,    93,    94,    42,    41,    39,   102,   104,   105,
   106,   107,    37,   109,   110,    27,   112,   114,   115,    31,
   116,    66,   118,     6,   119,   120,   121,    26,   123,    22,
   124,    20,   127,   128,   129,    19,   131,   132,    22,   137,
    95,   138,   139,    24,    25,   130,    25,   140,   141,   108,
   111,    82,    23,   144,   144,    22,    89,    45,    11,   154,
    92,    24,    29,    24,    61,     4,    78,   108,    43,    45,
    82,   125,     5,    40,    30,    45,    10,    10,    10,   142,
    45,    45,    45,    25,   143,    18,    34,    17,    16,    33,
     8,     2,   150,   151,   153,     1,   nil,   nil,   nil,   nil,
   nil,    64,   nil,   nil,    34,    31,   nil,    33,   nil,   nil,
   nil,   nil,   nil,   nil,     5,     5,   nil,     5,   nil,   nil,
   nil,    81,   146,   nil,   nil,   nil,   nil,   nil,   nil,    28,
   nil,   nil,   nil,   nil,   148,   nil,   nil,   nil,   nil,   nil,
    23,   nil,   122,   nil,   nil,    25,     4,   nil,   nil,     6,
     6,     6,   nil,    48,   100,    25,   nil,   nil,    31,     4,
   nil,   nil,   nil,    45,    47,    53,   nil,   nil,   nil,    31,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,    25,   nil,
     5,    22,    22,    22,    45,    60,    45,   nil,   nil,     4,
    24,    45,   nil,    25,    47,    29,   nil,   nil,   nil,    82,
   nil,    80,   nil,    45,   nil,    24,    83,     6,     6,     6,
    74,    72,    64,    45,    45,    34,   nil,    47,    33,    32,
   nil,   nil,    10,    47,   nil,    23,    44,   nil,    55,   149,
    28,   nil,   nil,   nil,    47,    72,   nil,   nil,    31,    22,
    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,    95,   nil,   nil,   nil,   nil,
   nil,   nil,   145,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    31,   nil,   nil,   nil,    81,   nil,
   nil,   145,   nil,   nil,   nil,   nil,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    45,    29,   nil,   nil,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    23,   nil,    47,   nil,    23,     5,    55,   nil,    28,
   nil,   nil,   nil,    45,    45,   nil,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,    79,   nil,   nil,    45,   nil,   nil,
   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,   nil,     4,     4,   nil,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,    25,
   nil,   nil,    45,   nil,   nil,    29,   nil,   nil,     6,    47,
   nil,   nil,    23,   nil,   nil,   nil,   nil,    25,    32,   nil,
    23,   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,     4,
     6,   nil,   nil,    47,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,    45,   nil,    45,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,   nil,
   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,    32,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    45,    31,     4,     5,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    32,    32,   nil,   nil,   nil,   nil,
   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,    80,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45 ]

racc_goto_pointer = [
   nil,   195,   191,   nil,   -21,  -160,  -225,   nil,   -16,   nil,
  -147,  -173,  -271,  -268,  -243,  -272,  -154,  -160,  -133,  -184,
  -190,   nil,  -193,  -138,  -363,   -38,    96,  -116,  -135,   -69,
    28,   -27,  -141,    30,    27,   nil,   nil,   101,   nil,    31,
  -143,   -80,    29,  -271,  -291,    -2,  -212,   -98,  -283,  -450,
   nil,   -80,  -213,   -79,    -9,  -137,   nil,  -290,   nil,  -155,
  -195,  -301,  -392,  -148,    24,   -92,    85,   nil,   nil,   nil,
   nil,   nil,  -261,   nil,  -262,   nil,   nil,   nil,     6,  -163,
   -81,  -355,  -349,   -95,   -40,    25,   -94,    21,   -95,  -137,
    21,   -84,  -145,  -418,  -200,  -165,   nil,   nil,   nil,   nil,
  -267,  -448,  -541,   nil,  -172,  -290,  -481,  -314,  -357,  -391,
  -312,  -376,  -411,   nil,  -305,  -404,  -402,  -694,    89,    32,
  -243,  -114,  -449,  -436,  -550,  -510,   nil,  -506,    88,   -37,
  -120,  -363,  -135,   nil,   nil,   nil,   nil,  -133,  -256,  -125,
  -243,  -497,  -399,  -507,  -538,  -376,  -357,   nil,   -19,  -160,
    28,    26,   nil,  -211,  -352 ]

racc_goto_default = [
   nil,   nil,   nil,   207,   213,   216,   345,   224,   188,   193,
   196,   nil,   201,   203,   205,   210,   214,   219,   222,   187,
   191,   195,   198,   200,    26,    31,   nil,   232,    47,    52,
   nil,   434,   nil,   120,   121,    79,     4,     7,    11,   nil,
   nil,   nil,   nil,   312,   nil,   228,   nil,   nil,   nil,   436,
    61,   nil,   179,    85,    87,   nil,   229,   230,   231,   nil,
   nil,   nil,   467,   nil,   nil,    43,   nil,    54,    59,    63,
    67,    70,    74,    78,     6,     9,    13,    15,   nil,   nil,
   nil,   nil,   259,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   308,   nil,   281,   298,   300,   301,   302,
   nil,   nil,   583,   280,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   304,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   566,   nil,   567,   nil,   nil,   nil,
   nil,   268,   nil,   271,   274,   276,   279,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   273,   nil,   108,   nil,   nil,
   114,   nil,   404,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :TRUE => 2,
 :FALSE => 3,
 :INTEGER_CONSTANT => 4,
 :FLOATING_CONSTANT => 5,
 :OCTAL_CONSTANT => 6,
 :HEX_CONSTANT => 7,
 :CHARACTER_LITERAL => 8,
 "(" => 9,
 ")" => 10,
 :STRING_LITERAL => 11,
 "[" => 12,
 "]" => 13,
 "." => 14,
 :IDENTIFIER => 15,
 "->" => 16,
 :SIZEOF => 17,
 "&" => 18,
 "*" => 19,
 "+" => 20,
 "-" => 21,
 "~" => 22,
 "!" => 23,
 "/" => 24,
 "%" => 25,
 "<<" => 26,
 ">>" => 27,
 "<" => 28,
 ">" => 29,
 "<=" => 30,
 ">=" => 31,
 "==" => 32,
 "!=" => 33,
 "^" => 34,
 "|" => 35,
 "&&" => 36,
 "||" => 37,
 "?" => 38,
 ":" => 39,
 ";" => 40,
 "," => 41,
 "=" => 42,
 :VOID => 43,
 :FLOAT32_T => 44,
 :DOUBLE64_T => 45,
 :TYPE_NAME => 46,
 :BOOL_T => 47,
 :FLOAT => 48,
 :DOUBLE => 49,
 :CHAR_T => 50,
 :SCHAR_T => 51,
 :UCHAR_T => 52,
 :CHAR => 53,
 :SHORT => 54,
 :INT => 55,
 :LONG => 56,
 :INT8 => 57,
 :INT16 => 58,
 :INT32 => 59,
 :INT64 => 60,
 :INT128 => 61,
 :INT8_T => 62,
 :INT16_T => 63,
 :INT32_T => 64,
 :INT64_T => 65,
 :INT128_T => 66,
 :UINT8_T => 67,
 :UINT16_T => 68,
 :UINT32_T => 69,
 :UINT64_T => 70,
 :UINT128_T => 71,
 :SIGNED => 72,
 :UNSIGNED => 73,
 :STRUCT => 74,
 "{" => 75,
 "}" => 76,
 :STRING => 77,
 :SIZE_IS => 78,
 :COUNT_IS => 79,
 :ENUM => 80,
 :ENUM8 => 81,
 :ENUM16 => 82,
 :ENUM32 => 83,
 :ENUM64 => 84,
 :ENUM128 => 85,
 :CONST => 86,
 :VOLATILE => 87,
 "..." => 88,
 :IN => 89,
 :OUT => 90,
 :INOUT => 91,
 :SEND => 92,
 :RECEIVE => 93,
 :NULLABLE => 94,
 :C_EXP => 95,
 :ALLOCATOR => 96,
 :CONTEXT => 97,
 :DEVIATE => 98,
 :ID => 99,
 :SINGLETON => 100,
 :IDX_IS_ID => 101,
 :ACTIVE => 102,
 :GENERATE => 103,
 :IMPORT_C => 104,
 :IMPORT => 105,
 :AB_STRING_LITERAL => 106,
 :TYPEDEF => 107,
 :NAMESPACE => 108,
 "::" => 109,
 :SIGNATURE => 110,
 :ONEWAY => 111,
 :CELLTYPE => 112,
 :INLINE => 113,
 :OPTIONAL => 114,
 :CALL => 115,
 :ENTRY => 116,
 :ATTRIBUTE => 117,
 :OMIT => 118,
 :VAR => 119,
 :REQUIRE => 120,
 :FACTORY => 121,
 :CTFACTORY => 122,
 :CELL => 123,
 :THROUGH => 124,
 :COMPOSITE => 125,
 "=>" => 126,
 :REGION => 127,
 :IN_THROUGH => 128,
 :OUT_THROUGH => 129,
 :TO_THROUGH => 130,
 :NODE => 131,
 :LINKUNIT => 132,
 :DOMAIN => 133,
 :CLASS => 134 }

racc_use_result_var = true

racc_nt_base = 135

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'TRUE',
'FALSE',
'INTEGER_CONSTANT',
'FLOATING_CONSTANT',
'OCTAL_CONSTANT',
'HEX_CONSTANT',
'CHARACTER_LITERAL',
'"("',
'")"',
'STRING_LITERAL',
'"["',
'"]"',
'"."',
'IDENTIFIER',
'"->"',
'SIZEOF',
'"&"',
'"*"',
'"+"',
'"-"',
'"~"',
'"!"',
'"/"',
'"%"',
'"<<"',
'">>"',
'"<"',
'">"',
'"<="',
'">="',
'"=="',
'"!="',
'"^"',
'"|"',
'"&&"',
'"||"',
'"?"',
'":"',
'";"',
'","',
'"="',
'VOID',
'FLOAT32_T',
'DOUBLE64_T',
'TYPE_NAME',
'BOOL_T',
'FLOAT',
'DOUBLE',
'CHAR_T',
'SCHAR_T',
'UCHAR_T',
'CHAR',
'SHORT',
'INT',
'LONG',
'INT8',
'INT16',
'INT32',
'INT64',
'INT128',
'INT8_T',
'INT16_T',
'INT32_T',
'INT64_T',
'INT128_T',
'UINT8_T',
'UINT16_T',
'UINT32_T',
'UINT64_T',
'UINT128_T',
'SIGNED',
'UNSIGNED',
'STRUCT',
'"{"',
'"}"',
'STRING',
'SIZE_IS',
'COUNT_IS',
'ENUM',
'ENUM8',
'ENUM16',
'ENUM32',
'ENUM64',
'ENUM128',
'CONST',
'VOLATILE',
'"..."',
'IN',
'OUT',
'INOUT',
'SEND',
'RECEIVE',
'NULLABLE',
'C_EXP',
'ALLOCATOR',
'CONTEXT',
'DEVIATE',
'ID',
'SINGLETON',
'IDX_IS_ID',
'ACTIVE',
'GENERATE',
'IMPORT_C',
'IMPORT',
'AB_STRING_LITERAL',
'TYPEDEF',
'NAMESPACE',
'"::"',
'SIGNATURE',
'ONEWAY',
'CELLTYPE',
'INLINE',
'OPTIONAL',
'CALL',
'ENTRY',
'ATTRIBUTE',
'OMIT',
'VAR',
'REQUIRE',
'FACTORY',
'CTFACTORY',
'CELL',
'THROUGH',
'COMPOSITE',
'"=>"',
'REGION',
'IN_THROUGH',
'OUT_THROUGH',
'TO_THROUGH',
'NODE',
'LINKUNIT',
'DOMAIN',
'CLASS',
'$start',
'all',
'component_description',
'primary_expression',
'namespace_identifier',
'string_literal_list',
'expression',
'postfix_expression',
'unary_expression',
'unary_operator',
'cast_expression',
'type_name',
'multiplicative_expression',
'additive_expression',
'shift_expression',
'relational_expression',
'equality_expression',
'and_expression',
'exclusive_or_expression',
'inclusive_or_expression',
'logical_and_expression',
'logical_or_expression',
'conditional_expression',
'constant_expression',
'declaration',
'type_specifier_qualifier_list',
'init_declarator_list',
'declaration_specifiers',
'type_specifier',
'type_qualifier',
'init_declarator',
'declarator',
'initializer',
'struct_specifier',
'enum_specifier',
'sign_int_type',
'char_type',
'int_type',
'sign',
'struct_tag',
'struct_declaration_list',
'@1',
'@2',
'struct_declaration',
'struct_declarator_list',
'spec_L',
'pointer_specifier_list',
'spec_R',
'pointer_specifier',
'struct_declarator',
'enum_type',
'enumerator_list',
'enumerator',
'pointer',
'direct_declarator',
'parameter_type_list',
'parameter_list',
'parameter_declaration',
'parameter_specifier_list_bracket',
'parameter_specifier_list',
'parameter_specifier',
'abstract_declarator',
'direct_abstract_declarator',
'initializer_list',
'specified_statement',
'statement',
'statement_specifier_list',
'typedef',
'const_statement',
'namespace',
'signature',
'celltype',
'cell',
'composite_celltype',
'region',
'import',
'import_C',
'signature_plugin',
'statement_specifier',
'alloc_list',
'plugin_name',
'plugin_arg',
'alloc',
'declarator_list',
'typedef_specifier',
'namespace_name',
'statement_list',
'signature_name',
'function_head_list',
'function_head',
'celltype_name',
'celltype_statement_list',
'specified_celltype_statement',
'celltype_statement',
'celltype_statement_specifier_list',
'port',
'attribute',
'var',
'require',
'factory',
'celltype_statement_specifier',
'alloc_list2',
'alloc2',
'port_type',
'namespace_signature_name',
'port_name',
'array_size',
'attribute_declaration_list',
'attribute_declaration',
'attribute_specifier',
'var_declaration_list',
'var_declaration',
'var_specifier',
'factory_head',
'factory_function_list',
'factory_function',
'factory_function_name',
'arg_list',
'namespace_celltype_name',
'cell_name',
'join_list',
'@3',
'specified_join',
'join_specifier_list',
'join',
'join_specifier',
'ca_name',
'array_index',
'composite_celltype_name',
'composite_celltype_statement_list',
'specified_composite_celltype_statement',
'composite_celltype_statement',
'composite_celltype_statement_specifier_list',
'composite_port',
'composite_attribute',
'internal_cell',
'export_join',
'composite_celltype_statement_specifier',
'composite_attribute_declaration_list',
'internal_namespace_celltype_name',
'internal_cell_name',
'internal_join_list',
'@4',
'external_join',
'internal_cell_elem_name',
'export_name',
'internal_ref_cell_name',
'region_specifier_list',
'region_name',
'region_statement',
'region_specifier',
'namespace_region_name',
'region_cell',
'region_cell_specifier_list',
'region_cell_specifier']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 52
  def _reduce_2( val, _values, result )
 result = [ :IDENTIFIER, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 54
  def _reduce_3( val, _values, result )
 result = [ :BOOL_CONSTANT, true ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 56
  def _reduce_4( val, _values, result )
 result = [ :BOOL_CONSTANT, false ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 58
  def _reduce_5( val, _values, result )
 result = [ :INTEGER_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 60
  def _reduce_6( val, _values, result )
 result = [ :FLOATING_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 62
  def _reduce_7( val, _values, result )
 result = [ :OCTAL_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 64
  def _reduce_8( val, _values, result )
 result = [ :HEX_CONSTANT, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 66
  def _reduce_9( val, _values, result )
 result = [ :CHARACTER_LITERAL, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 68
  def _reduce_10( val, _values, result )
 result = [ :STRING_LITERAL_LIST, val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 70
  def _reduce_11( val, _values, result )
 result = [ :PARENTHESES, val[1].get_elements ]
   result
  end
.,.,

 # reduce 12 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 80
  def _reduce_13( val, _values, result )
			# 連接した文字列を1つの文字列にまとめる
			str = "\"" + val[0].val.gsub( /\"(.*)\"/, "\\1" ) + val[1].val.gsub( /\"(.*)\"/, "\\1" ) + "\""
			result = Token.new( str, val[0].file, val[0].lineno, val[0].col )
   result
  end
.,.,

 # reduce 14 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 85
  def _reduce_15( val, _values, result )
 result = [ :OP_SUBSC, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 87
  def _reduce_16( val, _values, result )
 result = [ :OP_DOT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 89
  def _reduce_17( val, _values, result )
 result = [ :OP_REF, val[0], val[2] ]
   result
  end
.,.,

 # reduce 18 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 95
  def _reduce_19( val, _values, result )
 result = [ val[0], val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 97
  def _reduce_20( val, _values, result )
 result = [ :OP_SIZEOF_EXPR, val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 99
  def _reduce_21( val, _values, result )
 result = [ :OP_SIZEOF_TYPE, val[1] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 102
  def _reduce_22( val, _values, result )
 result = :OP_U_AMP
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 103
  def _reduce_23( val, _values, result )
 result = :OP_U_ASTER
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 104
  def _reduce_24( val, _values, result )
 result = :OP_U_PLUS
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 105
  def _reduce_25( val, _values, result )
 result = :OP_U_MINUS
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 106
  def _reduce_26( val, _values, result )
 result = :OP_U_TILDE
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 107
  def _reduce_27( val, _values, result )
 result = :OP_U_EXCLAM
   result
  end
.,.,

 # reduce 28 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 112
  def _reduce_29( val, _values, result )
  result = [ :CAST, val[1], val[3] ]
   result
  end
.,.,

 # reduce 30 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 117
  def _reduce_31( val, _values, result )
 result = [ :OP_MULT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 119
  def _reduce_32( val, _values, result )
 result = [ :OP_DIV, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 121
  def _reduce_33( val, _values, result )
 result = [ :OP_REMAIN, val[0], val[2] ]
   result
  end
.,.,

 # reduce 34 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 126
  def _reduce_35( val, _values, result )
 result = [ :OP_ADD, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 128
  def _reduce_36( val, _values, result )
 result = [ :OP_SUB, val[0], val[2] ]
   result
  end
.,.,

 # reduce 37 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 133
  def _reduce_38( val, _values, result )
 result = [ :OP_LSFT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 135
  def _reduce_39( val, _values, result )
 result = [ :OP_RSFT, val[0], val[2] ]
   result
  end
.,.,

 # reduce 40 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 140
  def _reduce_41( val, _values, result )
 result = [ :OP_LT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 142
  def _reduce_42( val, _values, result )
 result = [ :OP_GT, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 144
  def _reduce_43( val, _values, result )
 result = [ :OP_LE, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 146
  def _reduce_44( val, _values, result )
 result = [ :OP_GE, val[0], val[2] ]
   result
  end
.,.,

 # reduce 45 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 151
  def _reduce_46( val, _values, result )
 result = [ :OP_EQ, val[0], val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 153
  def _reduce_47( val, _values, result )
 result = [ :OP_NE, val[0], val[2] ]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 158
  def _reduce_49( val, _values, result )
 result = [ :OP_AND, val[0], val[2] ]
   result
  end
.,.,

 # reduce 50 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 163
  def _reduce_51( val, _values, result )
 result = [ :OP_EOR, val[0], val[2] ]
   result
  end
.,.,

 # reduce 52 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 168
  def _reduce_53( val, _values, result )
 result = [ :OP_OR, val[0], val[2] ]
   result
  end
.,.,

 # reduce 54 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 173
  def _reduce_55( val, _values, result )
 result = [ :OP_LAND, val[0], val[2] ]
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 178
  def _reduce_57( val, _values, result )
 result = [ :OP_LOR, val[0], val[2] ]
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 183
  def _reduce_59( val, _values, result )
 result = [ :OP_CEX, val[0], val[2].get_elements, val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 193
  def _reduce_60( val, _values, result )
			result = Expression.new( val[0] )
			# result.print
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 207
  def _reduce_61( val, _values, result )
			result = Expression.new( val[0] )
			# result.print

			# res = result.eval_const( nil )
			# if res then
			#   puts "val: #{res}"
			# else
			#   puts "val: nil"
			# end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 224
  def _reduce_62( val, _values, result )
			val[1].each { |i|	# i: Decl
				i.set_type( val[0] )
			}
			result = val[1]
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 238
  def _reduce_64( val, _values, result )
			val[1].set_qualifier( val[0] )
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 241
  def _reduce_65( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 243
  def _reduce_66( val, _values, result )
 result << val[2]
   result
  end
.,.,

 # reduce 67 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 248
  def _reduce_68( val, _values, result )
 val[0].set_initializer( val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 254
  def _reduce_69( val, _values, result )
 result = VoidType.new
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 255
  def _reduce_70( val, _values, result )
 result = FloatType.new(32)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 256
  def _reduce_71( val, _values, result )
 result = FloatType.new(64)
   result
  end
.,.,

 # reduce 72 omitted

 # reduce 73 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 259
  def _reduce_74( val, _values, result )
 result = DefinedType.new( val[0].val )
   result
  end
.,.,

 # reduce 75 omitted

 # reduce 76 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 263
  def _reduce_77( val, _values, result )
 result = BoolType.new
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 272
  def _reduce_78( val, _values, result )
			Generator.warning( "W5002 float: obsolete type. use float32_t"  )
			result = FloatType.new(32)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 276
  def _reduce_79( val, _values, result )
			Generator.warning( "W5003 double: obsolete type. use double64_t"  )
			result = FloatType.new(64)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 278
  def _reduce_80( val, _values, result )
 result = IntType.new( -1 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 284
  def _reduce_81( val, _values, result )
			result = IntType.new( -1 )
			result.set_sign( :SIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 289
  def _reduce_82( val, _values, result )
			result = IntType.new( -1 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 295
  def _reduce_83( val, _values, result )
			# Generator.warning( "W5004 char: obsolete type. use char_t"  )
			result = IntType.new( -11 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 295
  def _reduce_84( val, _values, result )
 result = IntType.new( -2 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 296
  def _reduce_85( val, _values, result )
 result = IntType.new( -3 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 297
  def _reduce_86( val, _values, result )
 result = IntType.new( -4 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 303
  def _reduce_87( val, _values, result )
			Generator.warning( "W5005 int8: obsolete. use int8_t"  )
			result = IntType.new(  8 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 307
  def _reduce_88( val, _values, result )
			Generator.warning( "W5006 int16: obsolete. use int16_t"  )
			result = IntType.new( 16 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 311
  def _reduce_89( val, _values, result )
			Generator.warning( "W5007 int32: obsolete. use int32_t"  )
			result = IntType.new( 32 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 316
  def _reduce_90( val, _values, result )
			Generator.warning( "W5008 int64: obsolete. use int64_t"  )
			result = IntType.new( 64 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 321
  def _reduce_91( val, _values, result )
			Generator.warning( "W5009 int64: obsolete. use int64_t"  )
			result = IntType.new( 128 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 321
  def _reduce_92( val, _values, result )
 result = IntType.new( 8 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 322
  def _reduce_93( val, _values, result )
 result = IntType.new( 16 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 323
  def _reduce_94( val, _values, result )
 result = IntType.new( 32 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 324
  def _reduce_95( val, _values, result )
 result = IntType.new( 64 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 325
  def _reduce_96( val, _values, result )
 result = IntType.new( 128 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 331
  def _reduce_97( val, _values, result )
			result = IntType.new( 8 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 336
  def _reduce_98( val, _values, result )
			result = IntType.new( 16 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 341
  def _reduce_99( val, _values, result )
			result = IntType.new( 32 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 346
  def _reduce_100( val, _values, result )
			result = IntType.new( 64 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 351
  def _reduce_101( val, _values, result )
			result = IntType.new( 128 )
			result.set_sign( :UNSIGNED, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 353
  def _reduce_102( val, _values, result )
 result = :SIGNED
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 354
  def _reduce_103( val, _values, result )
 result = :UNSIGNED
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 363
  def _reduce_104( val, _values, result )
			val[1].set_sign( val[0] )
			result = val[1]
   result
  end
.,.,

 # reduce 105 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 368
  def _reduce_106( val, _values, result )
 StructType.set_define( true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 374
  def _reduce_107( val, _values, result )
			StructType.end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 381
  def _reduce_108( val, _values, result )
			# tag が無い場合、内部名を与える
			result = StructType.new( :"$TAG_#{@@no_struct_tag_num}" )
			@@no_struct_tag_num += 1
			StructType.set_define( true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 386
  def _reduce_109( val, _values, result )
			StructType.end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 392
  def _reduce_110( val, _values, result )
			StructType.set_define( false )
			StructType.end_of_parse
			result = val[1]
   result
  end
.,.,

 # reduce 111 omitted

 # reduce 112 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 399
  def _reduce_113( val, _values, result )
 result = StructType.new( val[0].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 413
  def _reduce_114( val, _values, result )
			val[1].each { |i|	# i: Decl
				i.set_type( val[0] )
				i.set_kind( :MEMBER )
				i.check
				StructType.new_member( i )
			}
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 424
  def _reduce_115( val, _values, result )
			val[4].each { |i|	# i: Decl
				i.set_type( val[3] )
				i.set_kind( :MEMBER )
  				i.set_specifier_list val[1]
				i.check
				StructType.new_member( i )
			}
			result = val[4]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 426
  def _reduce_116( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 427
  def _reduce_117( val, _values, result )
 result <<  val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 430
  def _reduce_118( val, _values, result )
 result = [:STRING,-1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 431
  def _reduce_119( val, _values, result )
 result = [:STRING,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 432
  def _reduce_120( val, _values, result )
 result = [:SIZE_IS,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 433
  def _reduce_121( val, _values, result )
 result = [:COUNT_IS,val[2]]
   result
  end
.,.,

 # reduce 122 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 447
  def _reduce_123( val, _values, result )
			val[1].set_qualifier( val[0] )
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 453
  def _reduce_124( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 455
  def _reduce_125( val, _values, result )
 result << val[2]
   result
  end
.,.,

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 468
  def _reduce_130( val, _values, result )
 result = EnumType.new( -1 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 469
  def _reduce_131( val, _values, result )
 result = EnumType.new( 8 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 470
  def _reduce_132( val, _values, result )
 result = EnumType.new( 16 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 471
  def _reduce_133( val, _values, result )
 result = EnumType.new( 32 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 472
  def _reduce_134( val, _values, result )
 result = EnumType.new( 64 )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 473
  def _reduce_135( val, _values, result )
 result = EnumType.new( 128 )
   result
  end
.,.,

 # reduce 136 omitted

 # reduce 137 omitted

 # reduce 138 omitted

 # reduce 139 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 484
  def _reduce_140( val, _values, result )
 result = :CONST
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 485
  def _reduce_141( val, _values, result )
 result = :VOLATILE
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 493
  def _reduce_142( val, _values, result )
			val[1].set_type( val[0] )
			result = val[1]
   result
  end
.,.,

 # reduce 143 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 497
  def _reduce_144( val, _values, result )
 result = Decl.new( val[0].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 499
  def _reduce_145( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 505
  def _reduce_146( val, _values, result )
			val[0].set_type( ArrayType.new( val[2] ) )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 510
  def _reduce_147( val, _values, result )
			val[0].set_type( ArrayType.new )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 515
  def _reduce_148( val, _values, result )
			val[0].set_type( FuncType.new( val[2] ) )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 522
  def _reduce_149( val, _values, result )
			Generator.warning( "W5010 need 'void' for no parameter"  )
			val[0].set_type( FuncType.new )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 525
  def _reduce_150( val, _values, result )
 result = PtrType.new
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 531
  def _reduce_151( val, _values, result )
			result = PtrType.new
			result.set_qualifier( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 536
  def _reduce_152( val, _values, result )
			val[1].set_type(PtrType.new)
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 543
  def _reduce_153( val, _values, result )
			ptrtype = PtrType.new
			ptrtype.set_qualifier( val[1] )
			val[2].set_type( ptrtype )
			result = val[2]
   result
  end
.,.,

 # reduce 154 omitted

 # reduce 155 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 552
  def _reduce_156( val, _values, result )
 result = ParamList.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 558
  def _reduce_157( val, _values, result )
			val[0].add_param( val[2] )
			# result = val[0] 不要
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 570
  def _reduce_158( val, _values, result )
			val[2].set_kind( :PARAMETER )
			paramdecl = ParamDecl.new( val[2], val[1], val[0] )
			val[2].check
			result = paramdecl
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 577
  def _reduce_159( val, _values, result )
			Generator.error( "G1001 need specifier for \'$1\'" , val[1].get_name )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 584
  def _reduce_160( val, _values, result )
			unless val[0].instance_of?( VoidType ) then
				Generator.error( "G1002 need parameter name"  )
			end
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 592
  def _reduce_161( val, _values, result )
			unless val[1].instance_of?( VoidType ) then
				Generator.error( "G1003 need parameter name"  )
			end
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 594
  def _reduce_162( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 598
  def _reduce_163( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 600
  def _reduce_164( val, _values, result )
 result = result + val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 603
  def _reduce_165( val, _values, result )
 result = [ [:IN]  ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 604
  def _reduce_166( val, _values, result )
 result = [ [:OUT] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 605
  def _reduce_167( val, _values, result )
 result = [ [:INOUT] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 606
  def _reduce_168( val, _values, result )
 result = [ [:SEND,   val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 607
  def _reduce_169( val, _values, result )
 result = [ [:RECEIVE,val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 608
  def _reduce_170( val, _values, result )
 result = [ [:STRING,nil] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 609
  def _reduce_171( val, _values, result )
 result = [ [:STRING,  val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 610
  def _reduce_172( val, _values, result )
 result = [ [:SIZE_IS, val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 615
  def _reduce_173( val, _values, result )
			result = [ [:SIZE_IS,val[2]], [:MAX_IS, val[4]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 615
  def _reduce_174( val, _values, result )
 result = [ [:COUNT_IS,val[2]] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 616
  def _reduce_175( val, _values, result )
 result = [ [:NULLABLE] ]
   result
  end
.,.,

 # reduce 176 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 634
  def _reduce_177( val, _values, result )
			if val[1] then
				val[1].set_type( val[0] )
				result = val[1]
			else
				# エラー：仮で val[0] を返す
				result = val[0]
			end
   result
  end
.,.,

 # reduce 178 omitted

 # reduce 179 omitted

 # reduce 180 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 643
  def _reduce_181( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 649
  def _reduce_182( val, _values, result )
			Generator.error( "G1004 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 654
  def _reduce_183( val, _values, result )
			Generator.error( "G1005 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 659
  def _reduce_184( val, _values, result )
			Generator.error( "G1006 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 664
  def _reduce_185( val, _values, result )
			Generator.error( "G1007 impossible array type"  )
			result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 669
  def _reduce_186( val, _values, result )
			Generator.error( "G1008 impossible function type"  )
			result = nil
   result
  end
.,.,

 # reduce 187 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 676
  def _reduce_188( val, _values, result )
			Generator.warning( "W5011 need 'void' for no parameter"  )
			val[0].set_type( FuncType.new )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 681
  def _reduce_189( val, _values, result )
			val[0].set_type( FuncType.new( val[2] ) )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 685
  def _reduce_190( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 687
  def _reduce_191( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 689
  def _reduce_192( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 692
  def _reduce_193( val, _values, result )
 result = C_EXP.new( val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 699
  def _reduce_194( val, _values, result )
			result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 704
  def _reduce_195( val, _values, result )
			val[0] << val[2]
			result = val[0]
   result
  end
.,.,

 # reduce 196 omitted

 # reduce 197 omitted

 # reduce 198 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 726
  def _reduce_199( val, _values, result )
			obj = val[3]
			if obj.kind_of?( Cell ) || obj.kind_of?( Signature ) || obj.kind_of?( Celltype ) || obj.kind_of?( CompositeCelltype )then
                                # cell, signature 以外は、指定子を置けない
			else
              Generator.get_statement_specifier   # クリア
              Generator.error( "G1009 unexpected specifier"  )
			end
   result
  end
.,.,

 # reduce 200 omitted

 # reduce 201 omitted

 # reduce 202 omitted

 # reduce 203 omitted

 # reduce 204 omitted

 # reduce 205 omitted

 # reduce 206 omitted

 # reduce 207 omitted

 # reduce 208 omitted

 # reduce 209 omitted

 # reduce 210 omitted

 # reduce 211 omitted

 # reduce 212 omitted

 # reduce 213 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 747
  def _reduce_214( val, _values, result )
 Generator.add_statement_specifier val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 749
  def _reduce_215( val, _values, result )
 Generator.add_statement_specifier val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 753
  def _reduce_216( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 755
  def _reduce_217( val, _values, result )
 result = [ :CONTEXT, val[2].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 757
  def _reduce_218( val, _values, result )
 result = [ :DEVIATE ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 759
  def _reduce_219( val, _values, result )
 result = [ :ID, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 760
  def _reduce_220( val, _values, result )
 result = [:SINGLETON]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 761
  def _reduce_221( val, _values, result )
 result = [:IDX_IS_ID]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 762
  def _reduce_222( val, _values, result )
 result = [:ACTIVE]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 765
  def _reduce_223( val, _values, result )
 result = [:GENERATE, val[2].val, val[4].val]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 768
  def _reduce_224( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 769
  def _reduce_225( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 773
  def _reduce_226( val, _values, result )
  result = [ :NORMAL_ALLOC, val[0], nil, val[2], val[4], val[6] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 775
  def _reduce_227( val, _values, result )
  result = [ :NORMAL_ALLOC, val[0], val[2], val[5], val[7], val[9] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 790
  def _reduce_228( val, _values, result )
			val[0].each { |decl|
				decl.set_kind( :CONSTANT )
				Namespace.new_const_decl( decl )
				decl.check
			}
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 798
  def _reduce_229( val, _values, result )
			@@import_C = true
			Import_C.new( val[2] )
			@@import_C = false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 804
  def _reduce_230( val, _values, result )
			@@import_C = true
			Import_C.new( val[2], val[4] )
			@@import_C = false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 807
  def _reduce_231( val, _values, result )
 Import.new( val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 809
  def _reduce_232( val, _values, result )
 Import.new( val[2], true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 814
  def _reduce_233( val, _values, result )
 Generate.new( val[2].val, val[4], val[6] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 827
  def _reduce_234( val, _values, result )
			val[2].each{ |i|       # i:Decl
				i.set_kind( :TYPEDEF )
    		}
			Typedef.new_decl_list( val[1], val[2] )
			val[2].each{ |i|       # i:Decl
				i.check
			}
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 837
  def _reduce_235( val, _values, result )
			val[5].each{ |i|       # i:Decl
				i.set_kind( :TYPEDEF )
			}
			Typedef.new_decl_list( val[4], val[5] )
			val[5].each{ |i|       # i:Decl
				i.check
			}
   result
  end
.,.,

 # reduce 236 omitted

 # reduce 237 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 846
  def _reduce_238( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 848
  def _reduce_239( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 852
  def _reduce_240( val, _values, result )
val[1].end_of_parse
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 856
  def _reduce_241( val, _values, result )
result = Namespace.new(val[0].val)
   result
  end
.,.,

 # reduce 242 omitted

 # reduce 243 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 864
  def _reduce_244( val, _values, result )
 result = NamespacePath.new( val[0].val, false )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 865
  def _reduce_245( val, _values, result )
 result = NamespacePath.new( val[1].val, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 867
  def _reduce_246( val, _values, result )
 result = val[0].append!( val[2].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 872
  def _reduce_247( val, _values, result )
 result = val[1].end_of_parse( val[3] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 876
  def _reduce_248( val, _values, result )
result = Signature.new( val[0].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 880
  def _reduce_249( val, _values, result )
 result = NamedList.new( val[0], "function" )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 882
  def _reduce_250( val, _values, result )
 result = val[0].add_item( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 898
  def _reduce_251( val, _values, result )
			# val[1]: Decl
			if val[1].is_function? then
				result = FuncHead.new( val[1], val[0], false )
				val[1].set_kind :FUNCHEAD
				val[1].check
			else
				# mikan 関数の配列も以下のメッセージになる
				Generator.error( "G1010 Not function"  )
				result = nil
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 907
  def _reduce_252( val, _values, result )
			if val[4].is_function? then
				result = FuncHead.new( val[4], val[3], true )
			else
				Generator.error( "G1011 Not function"  )
				result = nil
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 916
  def _reduce_253( val, _values, result )
			val[1].end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 924
  def _reduce_254( val, _values, result )
 result = Celltype.new(val[0].val)
   result
  end
.,.,

 # reduce 255 omitted

 # reduce 256 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 950
  def _reduce_257( val, _values, result )
			if val[0].kind_of? Port then
				Celltype.new_port( val[0] )
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 960
  def _reduce_258( val, _values, result )
			if val[3].kind_of? Port then
				val[3].set_specifier val[1]  # 設定順序あり
				Celltype.new_port( val[3] )
			else
				# Port 以外では指定子はエラー
				Generator.error( "G1012 $1 : cannot put specifier here" , val[1] )
			end
   result
  end
.,.,

 # reduce 259 omitted

 # reduce 260 omitted

 # reduce 261 omitted

 # reduce 262 omitted

 # reduce 263 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 971
  def _reduce_264( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 973
  def _reduce_265( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 976
  def _reduce_266( val, _values, result )
 result = [ :INLINE ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 977
  def _reduce_267( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 978
  def _reduce_268( val, _values, result )
 result = [ :OPTIONAL ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 981
  def _reduce_269( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 982
  def _reduce_270( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 983
  def _reduce_271( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 984
  def _reduce_272( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 988
  def _reduce_273( val, _values, result )
  result = [ :INTERNAL_ALLOC, val[0].val, val[2].val, val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 990
  def _reduce_274( val, _values, result )
  result = [ :RELAY_ALLOC, val[0].val, val[2].val, val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 996
  def _reduce_275( val, _values, result )
 result = Port.new( val[2].val, val[1], val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 998
  def _reduce_276( val, _values, result )
 result = Port.new( val[2].val, val[1], val[0], "[]" )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1000
  def _reduce_277( val, _values, result )
 result = Port.new(val[2].val, val[1], val[0], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1002
  def _reduce_278( val, _values, result )
 result = Port.new( val[2].val, val[1], val[0], nil, val[4], val[ 6 ].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1005
  def _reduce_279( val, _values, result )
 result = :CALL
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1006
  def _reduce_280( val, _values, result )
 result = :ENTRY
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1010
  def _reduce_281( val, _values, result )
 result = val[0]
   result
  end
.,.,

 # reduce 282 omitted

 # reduce 283 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1022
  def _reduce_284( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1026
  def _reduce_285( val, _values, result )
 Celltype.new_attribute( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1028
  def _reduce_286( val, _values, result )
 Celltype.new_attribute( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1040
  def _reduce_287( val, _values, result )
			val[0].each{ |i|       # i:Decl
				i.set_kind( :ATTRIBUTE )
				i.check
			}
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1049
  def _reduce_288( val, _values, result )
			val[3].each{ |i|       # i:Decl
				i.set_kind( :ATTRIBUTE )   # 設定順序あり
				i.set_specifier_list( [val[1]] )
				i.check
			}
			result = val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1051
  def _reduce_289( val, _values, result )
 result = [:OMIT]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1052
  def _reduce_290( val, _values, result )
 result = [:SIZE_IS,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1058
  def _reduce_291( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1062
  def _reduce_292( val, _values, result )
 Celltype.new_var( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1064
  def _reduce_293( val, _values, result )
 Celltype.new_var( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1074
  def _reduce_294( val, _values, result )
			val[0].each{ |i|       # i:Decl
				i.set_kind( :VAR )
				i.check
			}
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1083
  def _reduce_295( val, _values, result )
			val[3].each{ |i|       # i:Decl
				i.set_kind( :VAR )   # 設定順序あり
				i.set_specifier_list( [val[1]] )
				i.check
			}
			result = val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1085
  def _reduce_296( val, _values, result )
 result = [:SIZE_IS,val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1093
  def _reduce_297( val, _values, result )
			Celltype.new_require( val[1], val[3] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1097
  def _reduce_298( val, _values, result )
			Celltype.new_require( val[3], val[5], val[1].val )
   result
  end
.,.,

 # reduce 299 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1103
  def _reduce_300( val, _values, result )
 Factory.set_f_celltype( false )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1104
  def _reduce_301( val, _values, result )
 Factory.set_f_celltype( true )
   result
  end
.,.,

 # reduce 302 omitted

 # reduce 303 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1112
  def _reduce_304( val, _values, result )
 Factory.new( val[0].val, val[2], val[4], nil    )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1114
  def _reduce_305( val, _values, result )
 Factory.new( val[0].val, val[2], val[4], val[6] )
   result
  end
.,.,

 # reduce 306 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1121
  def _reduce_307( val, _values, result )
 result = [ [ :IDENTIFIER, val[0].val ] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1123
  def _reduce_308( val, _values, result )
 result << [ :IDENTIFIER, val[2].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1125
  def _reduce_309( val, _values, result )
 result = [ [ :STRING_LITERAL, val[0].val ] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1127
  def _reduce_310( val, _values, result )
 result << [ :STRING_LITERAL, val[2].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1132
  def _reduce_311( val, _values, result )
 Cell.new_def
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1134
  def _reduce_312( val, _values, result )
 result = Cell.end_of_parse true
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1136
  def _reduce_313( val, _values, result )
 result = Cell.end_of_parse false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1140
  def _reduce_314( val, _values, result )
 result = Cell.new(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1144
  def _reduce_315( val, _values, result )
 result = Cell.set_name(val[0].val)
   result
  end
.,.,

 # reduce 316 omitted

 # reduce 317 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1152
  def _reduce_318( val, _values, result )
 val[3].set_specifier_list( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1154
  def _reduce_319( val, _values, result )
 val[0].set_specifier_list( [] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1158
  def _reduce_320( val, _values, result )
 result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1160
  def _reduce_321( val, _values, result )
 result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1164
  def _reduce_322( val, _values, result )
 result = [ :THROUGH, val[2], val[4] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1167
  def _reduce_323( val, _values, result )
 result = val[0]
   result
  end
.,.,

 # reduce 324 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1185
  def _reduce_325( val, _values, result )
			result = Join.new( val[0].val,  -1, val[4] )
			Cell.new_join( result, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1190
  def _reduce_326( val, _values, result )
			result = Join.new( val[0].val, val[2], val[5] )
			Cell.new_join( result, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1195
  def _reduce_327( val, _values, result )
			result = Join.new( val[0].val, nil, val[2] )
			Cell.new_join( result, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1200
  def _reduce_328( val, _values, result )
			result = Join.new( val[0].val, nil, [ :COMPOSITE, val[4] ] )
			Cell.new_join( result, true )
   result
  end
.,.,

 # reduce 329 omitted

 # reduce 330 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1216
  def _reduce_331( val, _values, result )
			CompositeCelltype.end_of_parse
			result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1225
  def _reduce_332( val, _values, result )
 result = CompositeCelltype.new(val[0].val)
   result
  end
.,.,

 # reduce 333 omitted

 # reduce 334 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1238
  def _reduce_335( val, _values, result )
			if val[0].kind_of?( Port ) then
				CompositeCelltype.new_port( val[0] )   # 遅延して登録
			end
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1253
  def _reduce_336( val, _values, result )
			if val[3].kind_of?( Port ) then
				# port 以外 val[3] に有効な値が入っていないので、以下のメソッドを適用できない
				# 現状 port, cell 以外は指定子を受け付けない
				# （しかし将来他の文も指定子を受け付ける可能性があるので、この位置に記述する）
				val[3].set_specifier( Generator.get_statement_specifier )
				CompositeCelltype.new_port( val[3] )   # 遅延して登録 (set_specifier 後)
			elsif val[3].kind_of?( Cell ) then
				# Cell.end_of_parse にて設定
			else
              Generator.get_statement_specifier   # クリア
              Generator.error( "G1013 unexpected specifier"  )
			end
   result
  end
.,.,

 # reduce 337 omitted

 # reduce 338 omitted

 # reduce 339 omitted

 # reduce 340 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1267
  def _reduce_341( val, _values, result )
			Generator.add_statement_specifier val[0]
			result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1270
  def _reduce_342( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1273
  def _reduce_343( val, _values, result )
 result = [ :OPTIONAL ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1281
  def _reduce_344( val, _values, result )
			# CompositeCelltype.new_port( val[0] )
			result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1285
  def _reduce_345( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1289
  def _reduce_346( val, _values, result )
 CompositeCelltype.new_attribute( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1291
  def _reduce_347( val, _values, result )
 CompositeCelltype.new_attribute( val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1296
  def _reduce_348( val, _values, result )
 Cell.new_def
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1298
  def _reduce_349( val, _values, result )
 result = Cell.end_of_parse true
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1300
  def _reduce_350( val, _values, result )
 result = Cell.end_of_parse false
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1305
  def _reduce_351( val, _values, result )
 Cell.new(val[0],true)
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1309
  def _reduce_352( val, _values, result )
 Cell.set_name(val[0].val)
   result
  end
.,.,

 # reduce 353 omitted

 # reduce 354 omitted

 # reduce 355 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1319
  def _reduce_356( val, _values, result )
	Cell.external_join( val[0].val, val[4].val, true )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1321
  def _reduce_357( val, _values, result )
	Cell.external_join( val[0].val, val[2].val, false )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1331
  def _reduce_358( val, _values, result )
			CompositeCelltype.new_join( val[0].val,
						val[2].val, val[4].val, :ENTRY )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1336
  def _reduce_359( val, _values, result )
			CompositeCelltype.new_join( val[2].val,
						val[4].val, val[6].val, :ENTRY )
   result
  end
.,.,

 # reduce 360 omitted

 # reduce 361 omitted

 # reduce 362 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1349
  def _reduce_363( val, _values, result )
 Region.end_of_parse
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1351
  def _reduce_364( val, _values, result )
 Region.end_of_parse
   result
  end
.,.,

 # reduce 365 omitted

 # reduce 366 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1360
  def _reduce_367( val, _values, result )
 Region.new_in_through( val[2].val, val[4].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1362
  def _reduce_368( val, _values, result )
 Region.new_in_through
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1364
  def _reduce_369( val, _values, result )
 Region.new_out_through( val[2].val, val[4].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1366
  def _reduce_370( val, _values, result )
 Region.new_out_through()
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1368
  def _reduce_371( val, _values, result )
 Region.new_to_through( val[2], val[4].val, val[6].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1370
  def _reduce_372( val, _values, result )
 Region.new_to_through( val[2], nil, nil )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1372
  def _reduce_373( val, _values, result )
 Region.set_type( :NODE )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1374
  def _reduce_374( val, _values, result )
 Region.set_type( :LINKUNIT )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1376
  def _reduce_375( val, _values, result )
 Region.set_type( :DOMAIN, val[2].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1378
  def _reduce_376( val, _values, result )
 Region.set_type( :CLASS, val[2].val )
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1382
  def _reduce_377( val, _values, result )
 result = Region.new( val[0].val )
   result
  end
.,.,

 # reduce 378 omitted

 # reduce 379 omitted

 # reduce 380 omitted

 # reduce 381 omitted

 # reduce 382 omitted

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1395
  def _reduce_383( val, _values, result )
 Generator.add_statement_specifier val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1397
  def _reduce_384( val, _values, result )
 Generator.add_statement_specifier val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1401
  def _reduce_385( val, _values, result )
 result = [ :ALLOCATOR, val[2] ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1406
  def _reduce_386( val, _values, result )
 result = [ val[0].val ]
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1411
  def _reduce_387( val, _values, result )
 set_in_specifier
   result
  end
.,.,

module_eval <<'.,.,', 'tecslib/core/bnf.y.rb', 1413
  def _reduce_388( val, _values, result )
 unset_in_specifier
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class Generator



# ファイル => INCLUDE("header")の配列
Include = Hash.new {|hash, key| hash[key] = []}


class Token

  attr_accessor :val, :file, :lineno, :col

  def initialize(val, file, lineno, col)
    @val = val
    @file = file
    @lineno = lineno
    @col = col

  end

  def to_s
    @val.to_s
  end

  def to_sym
    @val.to_sym
  end

  def get_name
    @val
  end

  def locale
    [@file, @lineno, @col]
  end

  def eql?(other)
    if other.is_a? Symbol
      @val == other
    elsif other.is_a? Token
      @val == other.val
    elsif other.is_a? String
      @val.to_s == other
    else
      raise ArgumentError
    end
  end

  alias == eql?

  def show_tree( indent )
    indent.times { print "  " }
    print "#{@val}\n"
  end

end

#= TECSIO
#  Ruby2.0(1.9) 対応に伴い導入したクラス
#  SJIS 以外では、ASCII-8BIT として入力する
class TECSIO
  def self.foreach(file) # ブロック引数 { |line| }
    pr = Proc.new   # このメソッドのブロック引数を pr に代入
    if $b_no_kcode then
	  msg = "E".encode $Ruby19_File_Encode
      if( $Ruby19_File_Encode == "Shift_JIS" )

        # Shift JIS は、いったん Windows-31J として読み込ませ、Shift_JIS に変換させる．
        # コメント等に含まれる SJIS に不適切な文字コードは '?' または REPLACEMENT CHARACTER に変換される．
        # EUC や UTF-8 で記述された CDL が混在していても、Ruby 例外が発生することなく処理を進めることができる．
        # 文字コード指定が SJIS であって、文字列リテラルの中に、文字コードがSJIS 以外の非 ASCII が含まれている場合、
        # Ruby 1.8 の tecsgen では文字コード指定に影響なく処理されたものが、Ruby 1.9 以降では '?' に置き換わる可能性がある．

        mode = "r:Windows-31J"
      else
        mode = "r:#{$Ruby19_File_Encode}"
      end
      # mode = "r"
    else
	  msg = "E"
      mode = "r"
    end

    f = File.open( file, mode )
    begin
      f.each{ |line|
        # dbgPrint line
        line = str_code_convert( msg, line )
        pr.call( line )
      }
    ensure
      f.close
    end
  end

  #=== 文字コードが相違する場合一致させる
  # msg と str の文字コードが相違する場合、str を msg の文字コードに変換する
  # 変換不可の文字コードは '?' (utf-8 の場合 U+FFFD (REPLACEMENT CHARACTER )) に変換
  #
  # このメソッドは、エラーメッセージ出力でも使用されていることに注意．
  #
  #msg_enc::Encode | String
  def self.str_code_convert( msg, str )
    if $b_no_kcode == false then
      return str                          # Ruby V1.8 まで
    end
    if msg.encoding != str.encoding then
      option = { :invalid => :replace, :undef => :replace }   # 例外を発生させず、'?' に変換する(utf-8 は 0xfffd)
      # return str.encode( msg.encoding, option )
      str = str.encode( "utf-8", option )
      return str.encode( msg.encoding, option )
    else
      return str
    end
  end
end
